{"version":3,"sources":["store/index.js","components/Utils/RouterAction.js","rest/index.js","rest/users.api.js","containers/AccessDenied.js","components/Layout/CAppBar.js","components/Layout/CMainLayout.js","components/Layout/CDrawerLayout.js","components/Layout/CConfirm.js","components/Pages/Dashboard.js","components/Utils/RoleAccessConfig.js","rest/clinic.api.js","components/Pages/ManageClinics.js","rest/clinic_user.api.js","components/Pages/ManageUsers.js","components/Pages/Settings.js","components/Clinic/ClinicDashboard.js","rest/patient.api.js","components/Clinic/Patients.js","components/Clinic/Appointments.js","components/Patient/PatientDashboard.js","components/Patient/PatientInformation.js","rest/patient_history.api.js","components/Patient/PatientHistory.js","components/Patient/PatientMedications.js","components/Units/ClinicCard.js","components/Units/ClinicForm.js","components/Units/UserForm.js","components/Units/PatientForm.js","components/Units/ClinicUserForm.js","components/Units/PatientHistoryForm.js","components/Utils/ActionBar.js","containers/MainContainer.js","containers/HomePage.js","containers/ClinicListPage.js","containers/PatientContainer.js","containers/ClinicContainer.js","routes/index.js","utils/registerServiceWorker.js","index.js","reducers/index.js","store/store.prod.js"],"names":["module","exports","require","RouteTo","_","isEmpty","localStorage","getItem","props","path","history","push","CheckAuthentication","Component","AllowedRoles","uxRx","indexOf","react_default","a","createElement","react_router","to","ActOnBranch","method","name","arguments","length","undefined","value","setItem","clear","instance","axios","create","baseURL","get","params","config","defaults","headers","common","post","body","destroy","delete","_getUsers","callback","console","log","then","response","data","catch","e","_getDoctorsByClinic","clinicID","concat","_createUser","_tryLogin","payload","access_token","user","role","id","_tryLogout","_deleteUser","userId","AccessDenied","tryLogout","_this","_this2","this","href","onClick","React","withStyles","theme","root","flexGrow","grow","menuButton","Object","defineProperty","marginRight","breakpoints","up","display","appBar","marginLeft","width","appBarBackType","menuButtonBackType","classes","classAppBar","backType","className","style","marginBottom","AppBar_default","positionStatic","Toolbar_default","IconButton_default","color","aria-label","goBack","ArrowBack_default","Typography_default","variant","noWrap","setTitle","drawers","handleDrawerToggle","Menu_default","showRegistration","Button_default","logout","position","right","CMainLayout","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","form","confirm","val","setState","showConfirm","submitForm","handleChange","field","target","index_es","children","open","container","direction","justify","alignItems","item","elevation","padding","noValidate","autoComplete","spacing","md","xs","label","placeholder","fullWidth","margin","onChange","required","InputLabelProps","shrink","inputProps","autoCapitalize","type","defaultValue","marginTop","textAlign","Layout_CConfirm","key","onClose","onOk","title","message","actions","actionTitle","action","actionType","CDrawerLayout","mobileOpen","pageTitle","validateShouldTitle","goTo","location","pathname","_this$props","contentClass","content","unPad","contentNoPads","drawer","toolbar","List_default","map","ListItem_default","button","route","ListItemIcon_default","icon","ListItemText_default","primary","CssBaseline_default","firstPage","Layout_CAppBar","routePath","assign","Hidden_default","smUp","implementation","Drawer_default","anchor","paper","drawerPaper","xsDown","flexShrink","mixins","unit","withTheme","CConfirm","Modal_default","top","left","transform","size","CConfirmWrapped","backgroundColor","palette","background","boxShadow","shadows","outline","Dashboard","dashboardData","fetchData","Paper_default","component","objectSpread","gutters","paddingTop","paddingBottom","REGISTER_CLINIC","VIEW_DASHBOARD","roleQualified","roles","currentRole","includes","_getClinicsOwn","_createClinic","_deleteClinic","clinicId","ManageClinics","openClinicForm","deleteClinic","onCardClick","addNewClinic","rule","Utils_ActionBar","flexDirection","fontSize","clinic","lg","Units_ClinicCard","onDelete","Units_ClinicForm","closeForm","refreshList","_createClinicUser","_deleteClinicUser","clinic_userId","ManageUsers","expanded","showUserRole","deleteRoleOpen","deleteUserOpen","selectedUserID","selectedRoleID","panel","event","handleDelete","alert","userID","onDeleteRole","roleID","onDeleteUser","deleteRoleSuccess","deleteUserSuccess","record","idx","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","heading","lastname","firstname","middlename","ExpansionPanelDetails_default","Table_default","TableBody_default","TableRow_default","TableCell_default","email","dob","contact_no","clinic_name","ExpansionPanelActions_default","justifyContent","Units_UserForm","Units_ClinicUserForm","deleteCardOpen","chip","textTransform","Settings","TabContainer","ClinicDashboard","Tabs_default","Tab_default","Clinic_Patients","Clinic_Appointments","_getPatientsByClinic","_createPatient","Patients","openPatientForm","match","patientSelect","searchRoot","paddingLeft","InputBase_default","input","avatarClass","gender","purpleAvatar","orangeAvatar","Avatar_default","Units_PatientForm","flex","iconButton","avatar","deepOrange","deepPurple","Appointments","employee_name","contact","clinics","Search_default","PatientDashboard","patient","react","alt","src","secondary","PatientDashboard_TabContainer","Patient_PatientHistory","Patient_PatientMedications","Patient_PatientInformation","PatientInformation","chief_complaint","paddingRight","age","select","textField","SelectProps","MenuProps","menu","MenuItem_default","blood_type","email_address","_getPatientHistoriesByPatient","patientID","_createPatientHistory","_deletePatientHistory","patient_historyId","PatientHistory","openDataForm","selectedDataID","onDeleteData","dataID","confirmDelete","deleteDataSuccess","visit_datetime","history_present_illness","physical_exam","diagnosis","Units_PatientHistoryForm","PatientMedications","date","hpi","Card_default","card","CardContent_default","gutterBottom","minWidth","ClinicCard","deleteOpen","CardActionArea_default","clinic_address","clinic_contact","CardActions_default","media","objectFit","ClinicForm","showPopup","handleClose","TextField_default","Grid_default","ClinicFormWrapped","UserForm","UserFormWrapped","PatientForm","doctors","fetchDoctors","doctor","PatientFormWrapped","ClinicUserForm","fetchClinics","fetchClinicsSuccess","clinic_id","ClinicUserFormWrapped","PatientHistoryForm","PatientHistoryFormWrapped","ActionBar","MainContainer","password","validateAuth","tryLogin","status","Layout_CMainLayout","alignContent","onKeyPress","ev","preventDefault","HomePage","showClinicForm","MoveToInbox_default","Mail_default","Layout_CDrawerLayout","exact","render","Pages_Dashboard","Pages_ManageClinics","Pages_ManageUsers","Pages_Settings","ClinicListPage","patients","appointments","PatientContainer","Patient_PatientDashboard","ClinicContainer","Clinic_ClinicDashboard","Routes","react_router_dom","containers_HomePage","containers_ClinicListPage","containers_ClinicContainer","containers_PatientContainer","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registrationParam","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","createMuiTheme","main","core_styles","es","store","configureStore","routes","document","getElementById","URL","process","origin","addEventListener","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","rootReducer","combineReducers","__webpack_require__","d","__webpack_exports__","middlewares","ReduxThunk","enhancer","applyMiddleware","apply","initialState","createStore"],"mappings":"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","file":"static/js/main.e03c1937.chunk.js","sourcesContent":["/* eslint-disable global-require */\nmodule.exports = process.env.NODE_ENV === 'production' ? require('./store.prod') : require('./store.dev')\n","import React from 'react'\nimport { Redirect, withRouter } from 'react-router'\nimport _ from 'lodash'\nimport { AccessDenied } from 'containers'\n\nlet checkAuth = !_.isEmpty(localStorage.getItem('access_token')) ? true : false\n\nconst RouteTo = (props, path) => {\n  props.history.push(path)\n}\n\nconst CheckAuthentication = (Component, AllowedRoles) => {\n\n  if (!_.isEmpty(localStorage.getItem('rx'))) {\n    \n    let uxRx = localStorage.getItem('rx')\n\n    if (_.indexOf(AllowedRoles, uxRx) == -1) {\n      return <Redirect to=\"/denied\" />\n    }\n  }\n\n  return !_.isEmpty(localStorage.getItem('access_token')) ? Component : <Redirect to=\"/\" />\n}\n\nconst ActOnBranch = (method, name = null, value = null) => {\n  if (method === 'get') {\n    localStorage.getItem(name, value)\n  } else if (method === 'set') {\n    localStorage.setItem(name, value)\n  } else if (method === 'clear') {\n    localStorage.clear()\n  }\n}\n\nconst IP_ADDRESS = 'localhost:8000'\n\nexport { RouteTo, CheckAuthentication, ActOnBranch, IP_ADDRESS }\n","import axios from 'axios'\nimport { IP_ADDRESS } from '../components/Utils/RouterAction'\n\nconst auth0BaseUrl = 'http://' + IP_ADDRESS\n\nlet instance = axios.create({\n  baseURL: auth0BaseUrl,\n})\n\nexport const get = (path, params, config) => {\n  instance.defaults.headers.common['Authorization'] = 'Bearer ' + localStorage.getItem('access_token')\n  return instance.get(path, params, config)\n}\n\nexport const post = (path, body, config) => {\n  instance.defaults.headers.common['Authorization'] = 'Bearer ' + localStorage.getItem('access_token')\n  return instance.post(path, body || {}, config)\n}\n\nexport const destroy = (path, config) => {\n  instance.defaults.headers.common['Authorization'] = 'Bearer ' + localStorage.getItem('access_token')\n  return instance.delete(path, config)\n}\n","import { get, post, destroy } from '../rest'\n\nexport let _getUsers = (callback = null) => {\n  console.log('_getUsers called')\n  get('/api/v1/users')\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _getUsers', e)\n    })\n}\n\nexport let _getDoctorsByClinic = (clinicID, callback = null) => {\n  console.log('_getDoctorsByClinic called')\n  get(`/api/v1/users/clinic_doctors/${clinicID}`)\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _getDoctorsByClinic', e)\n    })\n}\n\nexport let _createUser = (data, callback = null) => {\n  console.log('_createUser called')\n  post('/api/user', data)\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _saveUser', e)\n    })\n}\n\nexport let _tryLogin = (payload, callback = null) => {\n  console.log('_tryLogin called')\n  post('/api/trylogin', payload)\n    .then(response => {\n\n      localStorage.setItem('access_token', response.data.access_token)\n      localStorage.setItem('rx', response.data.user.role)\n      localStorage.setItem('user_id', response.data.user.id)\n\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _getUsers', e)\n    })\n}\n\nexport let _tryLogout = (payload, callback = null) => {\n  console.log('_tryLogout called')\n  post('/api/trylogout', payload)\n    .then(response => {\n      if (callback) callback()\n    })\n    .catch(e => {\n      console.log('Error in _getUsers', e)\n    })\n}\n\nexport let _saveUser = (data, callback = null) => {\n  console.log('_saveUser called')\n  post('/api/v1/user', data)\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _saveUser', e)\n    })\n}\n\nexport let _deleteUser = (userId, callback = null) => {\n  console.log('_deleteUser called')\n  destroy(`/api/v1/user/${userId}`)\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _deleteUser', e)\n    })\n}\n","import React from 'react'\nimport { _tryLogout } from '../rest/users.api'\nimport { RouteTo, ActOnBranch } from '../components/Utils/RouterAction'\n\nexport default class AccessDenied extends React.Component {\n  tryLogout = () => {\n    _tryLogout({}, data => {\n       ActOnBranch('clear')\n       RouteTo(this.props, '/')\n    })\n }\n\n  render() {\n    return (\n      <div>\n        <h3>Unable to Access This Page</h3>\n        <a href=\"#\" onClick={() => this.tryLogout()}>Go back to Login page</a>\n      </div>\n    )\n  }\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { ClinicForm } from 'components'\n\nimport _ from 'lodash'\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n   root: {\n      flexGrow: 1,\n   },\n   grow: {\n      flexGrow: 1,\n   },\n   menuButton: {\n      marginRight: 20,\n      [theme.breakpoints.up(\"sm\")]: {\n         display: \"none\"\n      },\n   },\n   appBar: {\n      marginLeft: drawerWidth,\n      [theme.breakpoints.up(\"sm\")]: {\n         width: `calc(100% - ${drawerWidth}px)`\n      },\n   },\n   appBarBackType: {\n      marginLeft: 0,\n   },\n   menuButtonBackType: {\n      marginRight: 0,\n   },\n})\n\nfunction CAppBar(props) {\n   const { classes } = props\n    \n   let classAppBar = props.backType ? classes.appBarBackType : classes.appBar\n\n   return (\n      <div className={props.className} style={{ marginBottom: 80 }}>\n         <AppBar positionStatic className={classAppBar}>\n            <Toolbar>\n\n               {\n                  props.backType ? (\n                     [<IconButton\n                        color=\"inherit\"\n                        aria-label=\"Open drawer\"\n                        onClick={() => props.goBack()}\n                        className={classes.menuButtonBackType}>\n                           <ArrowBackIcon />\n                     </IconButton>,\n                     <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                        {props.setTitle || 'Dashboard'}\n                     </Typography>]\n                  ) : null\n               }\n\n               {\n                  props.drawers ? (\n                     [<IconButton\n                        color=\"inherit\"\n                        aria-label=\"Open drawer\"\n                        onClick={() => props.handleDrawerToggle()}\n                        className={classes.menuButton}>\n                            <MenuIcon />\n                      </IconButton>,\n                      <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                        {props.setTitle || 'Dashboard'}\n                      </Typography>]\n                     ) : null\n               }\n\n               {\n                  !props.backType && !props.drawers ? (\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                     {props.setTitle || 'Dashboard'}\n                  </Typography>\n                  ) : null\n               }\n               \n               {\n                  props.showRegistration ?\n                     <Button color=\"inherit\" onClick={props.showRegistration}>Register</Button>\n                  : <Button color=\"inherit\" onClick={() => props.logout()} style={{ position: 'absolute', right: 20 }}>Logout</Button>\n               }\n        </Toolbar>\n      </AppBar>\n      \n    </div>\n  );\n}\n\nCAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(CAppBar)","import React from 'react';\nimport MenuIcon from '@material-ui/icons/Menu'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'\nimport {\n  Modal, AppBar, Toolbar, Typography, Button, IconButton, Grid, Paper, TextField\n} from '@material-ui/core'\n\nimport _ from 'lodash'\n\nimport { _createUser } from '../../rest/users.api'\n\nimport CAppBar from './CAppBar'\nimport { CConfirm } from 'components'\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    }\n}\n\nclass CMainLayout extends React.Component {\n    constructor(props){\n        super(props)\n    }\n\n    state = {\n        showRegistration: false,\n        form: {},\n        confirm: false\n    }\n\n    showRegistration = val => {\n        this.setState({ showRegistration: val })\n    }\n    \n    showConfirm = val => {\n        this.setState({ confirm: val })\n    }\n\n    submitForm = () => {\n        _createUser(this.state.form, () => {\n            this.showRegistration(false)\n            this.showConfirm(false)\n        })\n\n    }\n\n    handleChange = (field, e) => {\n        let form = this.state.form\n        form[field] = e.target.value\n\n        this.setState({\n            form\n        })\n    }\n\n    render(){\n        const { classes } = this.props\n        return (\n            <div className={classes.root}>\n                \n                <div style={{ marginBottom: 80 }} />\n\n                <AppBar positionStatic>\n                    <Toolbar>\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                        CLINation\n                    </Typography>\n                    <Button color=\"inherit\" onClick={this.showRegistration}>REGISTER</Button>\n                    </Toolbar>\n                </AppBar>\n\n                {this.props.children}\n\n                <Modal open={this.state.showRegistration}>\n                    <Grid \n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\">\n                        <Grid item>\n                            <Paper elevation={2} style={{ padding: 20 }}>\n                                <Typography variant=\"h6\" style={{ marginBottom: 20 }}>\n                                    User Registration Form\n                                </Typography>\n                                <form noValidate autoComplete=\"off\">\n                                    <Grid container spacing={16}>\n                                        <Grid item md={4} xs={12}>\n                                            <TextField\n                                                id=\"lastname\"\n                                                label=\"Lastname\"\n                                                placeholder=\"Enter Lastname\"\n                                                fullWidth\n                                                margin=\"dense\"\n                                                variant=\"outlined\"\n                                                onChange={value => this.handleChange('lastname', value)}\n                                                required={true}\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                                inputProps={{ autoCapitalize: true }}\n                                            />\n                                        </Grid>\n                                        <Grid item md={4} xs={12}>\n                                            <TextField\n                                                id=\"firstname\"\n                                                label=\"Firstname\"\n                                                placeholder=\"Enter Firstname\"\n                                                fullWidth\n                                                margin=\"dense\"\n                                                onChange={value => this.handleChange('firstname', value)}\n                                                variant=\"outlined\"\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                            />\n                                        </Grid>\n                                        <Grid item md={4} xs={12}>\n                                            <TextField\n                                                id=\"middlename\"\n                                                label=\"Middlename\"\n                                                placeholder=\"Enter Middlename\"\n                                                onChange={value => this.handleChange('middlename', value)}\n                                                fullWidth\n                                                margin=\"dense\"\n                                                variant=\"outlined\"\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                            />\n                                        </Grid>\n                                    </Grid>\n\n                                    <TextField\n                                        label={'Birthdate'}\n                                        onChange={value => this.handleChange('dob', value)}\n                                        type=\"date\"\n                                        defaultValue=\"03/13/1990\"\n                                        fullWidth\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    /> \n\n                                    <TextField\n                                        id=\"contact\"\n                                        label=\"Contact Number\"\n                                        placeholder=\"Enter Contact Number\"\n                                        onChange={value => this.handleChange('contact_no', value)}\n                                        fullWidth\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n\n                                    <TextField\n                                        id=\"email\"\n                                        label=\"Email\"\n                                        placeholder=\"Enter Email\"\n                                        onChange={value => this.handleChange('email', value)}\n                                        fullWidth\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n\n                                    <TextField\n                                        id=\"username\"\n                                        label=\"Username\"\n                                        placeholder=\"Enter Username\"\n                                        onChange={value => this.handleChange('username', value)}\n                                        fullWidth\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                \n                                    <TextField\n                                        id=\"password\"\n                                        label=\"Password\"\n                                        placeholder=\"Enter Password\"\n                                        onChange={value => this.handleChange('password', value)}\n                                        fullWidth\n                                        type=\"password\"\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n\n                                    <TextField\n                                        id=\"confirm_password\"\n                                        label=\"Confirm Password\"\n                                        placeholder=\"Enter Confirm\"\n                                        onChange={value => this.handleChange('confirm', value)}\n                                        fullWidth\n                                        type=\"password\"\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n\n                                    <Grid container>\n                                        <Grid item md={6}>\n                                            <Button variant=\"contained\" color=\"primary\" onClick={() => this.showConfirm(true)} style={{ marginTop: 20 }}>\n                                                Register\n                                            </Button>\n                                        </Grid>\n                                        <Grid item md={6} style={{ textAlign: 'right' }}>\n                                            <Button variant=\"contained\" color=\"secondary\" onClick={() => this.showRegistration(false)} style={{ marginTop: 20 }}>\n                                                Cancel\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n\n                                </form>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Modal>\n\n                <CConfirm\n                    key={1}\n                    open={this.state.confirm}\n                    onClose={() => this.showConfirm(false)}\n                    onOk={() => this.submitForm()}\n                    title={'New User Confirmation'}\n                    message={'Are sure you want to save this user information?'}\n                    actions={[\n                        { actionTitle: 'Yes', action: () => this.submitForm(), actionType: 'primary' },\n                        { actionTitle: 'Cancel', action: () => this.showConfirm(false), actionType: 'secondary' }\n                    ]}\n                />\n            </div>\n        )\n    }\n}\n\nCMainLayout.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(CMainLayout)","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\n\nimport { RouteTo, ActOnBranch } from '../Utils/RouterAction'\nimport _ from 'lodash'\nimport CAppBar from \"./CAppBar\";\nimport { _tryLogout } from '../../rest/users.api'\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n   root: {\n      display: \"flex\"\n   },\n   drawer: {\n      [theme.breakpoints.up(\"sm\")]: {\n         width: drawerWidth,\n         flexShrink: 0\n      }\n   },\n   appBar: {\n      marginLeft: drawerWidth,\n      [theme.breakpoints.up(\"sm\")]: {\n         width: `calc(100% - ${drawerWidth}px)`\n      }\n   },\n   menuButton: {\n      marginRight: 20,\n      [theme.breakpoints.up(\"sm\")]: {\n         display: \"none\"\n      }\n   },\n   toolbar: theme.mixins.toolbar,\n   drawerPaper: {\n      width: drawerWidth\n   },\n   content: {\n      flexGrow: 1,\n      padding: theme.spacing.unit * 2\n   },\n   contentNoPads: {\n      flexGrow: 1,\n      padding: 0\n   }\n})\n\nclass CDrawerLayout extends React.Component {\n   state = {\n      mobileOpen: false,\n      pageTitle: ''\n   }\n   \n   componentDidMount(){\n      this.validateShouldTitle(this.props.location.pathname)\n   }\n\n   validateShouldTitle = path => {\n      switch(path){\n         case '/dashboard': \n            this.setState({ pageTitle: 'Dashboard' }); break\n         case '/dashboard/manage_clinics': \n            this.setState({ pageTitle: 'Manage Clinics' }); break\n         case '/dashboard/manage_users': \n            this.setState({ pageTitle: 'Manage Users' }); break\n         case '/dashboard/settings': \n            this.setState({ pageTitle: 'Settings' }); break \n      }\n   }\n\n   handleDrawerToggle = () => {\n      this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n   }\n\n   goTo = path => {\n      switch(path){\n         case '/dashboard': \n            this.setState({ pageTitle: 'Dashboard' }); break\n         case '/dashboard/manage_clinics': \n            this.setState({ pageTitle: 'Manage Clinics' }); break\n         case '/dashboard/manage_users': \n            this.setState({ pageTitle: 'Manage Users' }); break\n         case '/dashboard/settings': \n            this.setState({ pageTitle: 'Settings' }); break     \n      }\n\n      RouteTo(this.props, path)\n   }\n\n   tryLogout = () => {\n      _tryLogout({}, data => {\n         ActOnBranch('clear')\n         this.goTo('/')\n      })\n   }\n\n   render() {\n      const { classes, theme } = this.props;\n      let contentClass = classes.content\n\n      if(this.props.unPad)\n         contentClass = classes.contentNoPads\n\n      const drawer = (\n         <div>\n            <div className={classes.toolbar} />\n            <List>\n               {\n                  _.map(this.props.drawers, data => {\n                     return (\n                        <ListItem button key={data.name} onClick={() => this.goTo(data.route)}>\n                           <ListItemIcon>\n                              {data.icon}\n                           </ListItemIcon>\n                           \n                           <ListItemText primary={data.name} />\n                        </ListItem>\n                     )\n                  })\n               }\n\n               {/* <ListItem button key={'Logout'} onClick={() => this.tryLogout()}>\n                  <ListItemIcon>\n                     <MailIcon />\n                  </ListItemIcon>\n                  \n                  <ListItemText primary={'Logout'} />\n               </ListItem> */}\n            </List>\n         </div>\n      )\n\n      return (\n         <div className={classes.root}>\n            <CssBaseline />\n            \n            {\n               !this.props.backType && !this.props.firstPage ? (\n                  <div>\n                     <CAppBar \n                        handleDrawerToggle={this.handleDrawerToggle} \n                        setTitle={this.state.pageTitle} \n                        routePath={this.props.location.pathname}\n                        logout={this.tryLogout}\n                        {...this.props}  \n                     />\n      \n                     <nav className={classes.drawer}>\n                        <Hidden smUp implementation=\"css\">\n                           <Drawer\n                              container={this.props.container}\n                              variant=\"temporary\"\n                              anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n                              open={this.state.mobileOpen}\n                              onClose={this.handleDrawerToggle}\n                              classes={{\n                                 paper: classes.drawerPaper\n                              }}\n                           >\n                           {drawer}\n                           </Drawer>\n                        </Hidden>\n                        <Hidden xsDown implementation=\"css\">\n                           <Drawer\n                           classes={{\n                              paper: classes.drawerPaper\n                           }}\n                           variant=\"permanent\"\n                           open\n                           >\n                           {drawer}\n                           </Drawer>\n                        </Hidden>\n                     </nav>\n                  </div>\n               ) : (\n                  <div>\n                      <CAppBar \n                        backType\n                        goBack={() => this.props.history.goBack()}\n                        setTitle={this.state.pageTitle}\n                        routePath={this.props.location.pathname}\n                        logout={this.tryLogout}\n                     />\n                  </div>\n               )\n            }\n\n            <main className={contentClass}>\n               <div className={classes.toolbar} />\n               {this.props.children}\n            </main>\n         </div>\n      )\n   }\n}\n\nCDrawerLayout.propTypes = {\n   classes: PropTypes.object.isRequired,\n   container: PropTypes.object,\n   theme: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(CDrawerLayout)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Grid from '@material-ui/core/Modal';\nimport Paper from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport _ from 'lodash'\n\nconst styles = theme => ({\n    paper: {\n      position: 'absolute',\n      width: theme.spacing.unit * 50,\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing.unit * 4,\n      outline: 'none',\n    },\n})\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n    const top = 50\n    const left = 50\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    }\n}\n\nclass CConfirm extends React.Component {\n  render() {\n    \n    const { classes } = this.props\n\n    return (\n        <Modal\n            open={this.props.open}\n            onClose={this.props.onClose}\n        >\n            <div style={getModalStyle()} className={classes.paper}>\n                <Typography variant=\"h6\" id=\"modal-title\">\n                    {this.props.title}\n                </Typography>\n                <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                    {this.props.message}\n                </Typography>\n\n                <div style={{ marginTop: 10 }}>\n                    {\n                        _.map(this.props.actions, action => {\n                            return <Button \n                                size=\"small\" color={action.actionType || 'default'} \n                                onClick={action.action}\n                                style={{ marginRight: 10 }}>\n                                {action.actionTitle}\n                            </Button>\n                        })\n                    }\n                </div>\n\n            </div>\n        </Modal>\n    )\n  }\n}\n\nCConfirm.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nconst CConfirmWrapped = withStyles(styles)(CConfirm);\n\nexport default CConfirmWrapped","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'\nimport _ from 'lodash'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = theme => ({\n   root: {\n      flexGrow: 1,\n      ...theme.mixins.gutters(),\n      paddingTop: theme.spacing.unit * 2,\n      paddingBottom: theme.spacing.unit * 2,\n   },\n   grow: {\n     flexGrow: 1,\n   }\n})\n\nclass Dashboard extends React.Component {\n   state = {\n      dashboardData: []\n   }\n\n   componentDidMount(){\n      this.fetchData()\n   }\n\n   fetchData = () => {\n      this.setState({\n         dashboardData: [\n            { key: 'Clinics', value: 2 },\n            { key: 'Employees', value: 3 },\n            { key: 'Patients', value: 35 },\n         ]\n      })\n   }\n\n   render() {\n      const { classes, theme } = this.props;\n\n      return (\n         <div className={classes.root}>\n            {\n               _.map(this.state.dashboardData, data => {\n                  return <Paper className={classes.root} elevation={1} style={{ marginBottom: 5 }}>\n                     <Typography variant=\"h5\" component=\"h3\">\n                        <strong>{data.value}</strong>\n                     </Typography>\n                     <Typography component=\"p\">\n                     {data.key}\n                     </Typography>\n                  </Paper>\n               })\n            }\n         </div>\n      )\n   }\n}\n\n\nexport default withStyles(styles, { withTheme: true })(Dashboard)","import _ from 'lodash'\n\nexport const REGISTER_CLINIC = ['MAIN_OWNER', 'OWNER']\nexport const VIEW_DASHBOARD = ['MAIN_OWNER', 'OWNER']\n\nexport const CLINIC_LIST = ['MAIN_OWNER', 'OWNER', 'DOCTOR', 'STAFF']\nexport const DELETE_CLINIC = ['MAIN_OWNER']\n\nexport const roleQualified = (roles) => {\n    let currentRole = localStorage.getItem(\"rx\")\n    return _.includes(roles, currentRole)\n}","import { get, post, destroy } from '../rest'\n\nexport let _getClinics = (callback = null) => {\n  console.log('_getClinics called')\n  get('/api/v1/clinics')\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _getClinics', e)\n    })\n}\n\nexport let _getClinicsOwn = (callback = null) => {\n  console.log('_getClinics called')\n  get('/api/v1/clinics/own')\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _getClinicsOwn', e)\n    })\n}\n\nexport let _createClinic = (data, callback = null) => {\n  console.log('_createClinic called')\n  post('/api/v1/clinic', data)\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _saveClinic', e)\n    })\n}\n\nexport let _saveClinic = (data, callback = null) => {\n  console.log('_saveClinic called')\n  post('/api/v1/clinic', data)\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _saveClinic', e)\n    })\n}\n\nexport let _deleteClinic = (clinicId, callback = null) => {\n  console.log('_deleteClinic called')\n  destroy(`/api/v1/clinic/${clinicId}`)\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _deleteClinic', e)\n    })\n}\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'\nimport { Typography, Grid, Button } from '@material-ui/core'\nimport { ClinicCard, ActionBar, ClinicForm } from 'components'\nimport * as rule from '../Utils/RoleAccessConfig'\n\nimport _ from 'lodash'\nimport { RouteTo } from '../Utils/RouterAction'\nimport { _getClinicsOwn, _deleteClinic } from '../../rest/clinic.api'\n\nconst styles = {\n   root: {\n     flexGrow: 1,\n   },\n   grow: {\n     flexGrow: 1,\n   }\n}\n\nclass ManageClinics extends React.Component {\n\n   state = {\n      data: [],\n      openClinicForm: false\n   }\n\n   componentDidMount(){\n      this.fetchData()\n   }\n\n   fetchData = () => {\n      _getClinicsOwn(data => {\n         this.setState({\n            data\n         })\n      })\n   }\n\n   deleteClinic = id => {\n      _deleteClinic(id, () => {\n         this.fetchData()\n      })\n   }\n\n   onCardClick = item => {\n      this.goTo('/clinic/' + item.id)\n   }\n   \n   goTo = path => {\n      RouteTo(this.props, path)\n   }\n\n   addNewClinic = val => {\n      this.setState({ openClinicForm: val })\n   }\n   \n   render() {\n      const { classes, theme } = this.props;\n\n      return (\n         <div>\n\n            {\n               rule.roleQualified(rule.REGISTER_CLINIC) ? <ActionBar style={{ marginBottom: 10 }}>\n                  <Button color=\"primary\" onClick={() => this.addNewClinic(true)}>\n                     Register a new Clinic\n                  </Button>\n               </ActionBar> : null\n            }\n            \n            <Grid style={{ flexDirection: 'row' }} container>\n               {\n                  !_.isEmpty(this.state.data) ? (\n                     _.map(this.state.data, clinic => {\n                        return (\n                           <Grid item lg={4} md={6} xs={12}>\n                              <ClinicCard \n                                 data={clinic} \n                                 onClick={() => this.onCardClick(clinic)} \n                                 onDelete={() => this.deleteClinic(clinic.id)} \n                              />\n                           </Grid>\n                        )\n                     })\n                  ) : <Typography style={{ fontSize: 30, color: 'gray' }}>No clinic(s)</Typography>\n               }   \n            </Grid>\n\n            {\n               rule.roleQualified(rule.REGISTER_CLINIC) ? <ClinicForm \n                  open={this.state.openClinicForm} \n                  closeForm={() => this.addNewClinic(false)} \n                  refreshList={() => this.fetchData()}   \n               /> : null\n            }\n\n         </div>\n      )\n   }\n}\n\n\nexport default withStyles(styles, { withTheme: true })(ManageClinics)","import { get, post, destroy } from '../rest'\n\nexport let _getClinicUsers = (callback = null) => {\n  console.log('_getClinicUsers called')\n  get('/api/v1/clinic_users')\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _getClinicUsers', e)\n    })\n}\n\nexport let _createClinicUser = (data, callback = null) => {\n  console.log('_createClinicUser called')\n  post('/api/v1/clinic_user', data)\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _saveClinicUser', e)\n    })\n}\n\nexport let _saveClinicUser = (data, callback = null) => {\n  console.log('_saveClinicUser called')\n  post('/api/v1/clinic_user', data)\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _saveClinicUser', e)\n    })\n}\n\nexport let _deleteClinicUser = (clinic_userId, callback = null) => {\n  console.log('_deleteClinicUser called')\n  destroy(`/api/v1/clinic_user/${clinic_userId}`)\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _deleteClinicUser', e)\n    })\n}\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'\nimport { Typography, Grid } from '@material-ui/core'\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport FaceIcon from '@material-ui/icons/Face';\nimport DoneIcon from '@material-ui/icons/Done';\n\nimport { ActionBar, UserForm, ClinicUserForm } from 'components'\nimport { _createUser, _getUsers, _deleteUser } from '../../rest/users.api'\nimport { _deleteClinicUser } from '../../rest/clinic_user.api'\n\nimport { CConfirm } from 'components'\n\nimport _ from 'lodash'\nimport { truncateSync } from \"fs\";\n\nconst styles = theme => ({\n   root: {\n      flexGrow: 1,\n   },\n   grow: {\n      flexGrow: 1,\n   },\n   chip: {\n     margin: theme.spacing.unit,\n   },\n   heading: {\n      textTransform: 'uppercase'\n   }\n})\n\nclass ManageUsers extends React.Component {\n   state = {\n      expanded: 0,\n      data: [],\n      showRegistration: false,\n      showUserRole: false,\n      deleteRoleOpen: false,\n      deleteUserOpen: false,\n      selectedUserID: '',\n      selectedRoleID: ''\n   }\n\n   componentDidMount(){\n      this.fetchData()\n   }\n\n   fetchData = () => {\n      _getUsers(data => {\n         this.setState({\n            data\n         })\n      })\n   }\n\n   handleChange = panel => (event, expanded) => {\n      this.setState({\n        expanded: expanded ? panel : false,\n      })\n   }\n\n   handleDelete = () => {\n      alert('You clicked the delete icon.')\n   }\n\n   showRegistration = val => {\n      this.setState({ showRegistration: val })\n   }\n\n   showUserRole = (val, userID) => {\n      this.setState({ showUserRole: val, selectedUserID: userID })\n   }\n\n   onDeleteRole = (val, roleID) => {\n      this.setState({ deleteRoleOpen: val, selectedRoleID: roleID })\n   }\n\n   onDeleteUser = (val, userID) => {\n      this.setState({ deleteUserOpen: val, selectedUserID: userID })\n   }\n\n   deleteRoleSuccess = () => {\n      _deleteClinicUser(this.state.selectedRoleID, () => {\n         this.fetchData()\n         this.onDeleteRole(false, '')\n      })\n   }\n\n   deleteUserSuccess = () => {\n      _deleteUser(this.state.selectedUserID, () => {\n         this.fetchData()\n         this.onDeleteUser(false, '')\n      })\n   }\n\n   render() {\n      const { classes, theme } = this.props\n      const { expanded } = this.state\n\n      return (\n         <div className={classes.root}>\n\n            <ActionBar style={{ marginBottom: 10 }}>\n               <Button color=\"primary\" onClick={() => this.showRegistration(true)}>\n                  Register a User\n               </Button>\n            </ActionBar>\n\n            {\n               _.map(this.state.data, (record, idx) => {\n                  return <ExpansionPanel>\n                     <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={classes.heading}><strong>{record.user.lastname}, {record.user.firstname} {record.user.middlename} ({record.user.role})</strong></Typography>\n                     </ExpansionPanelSummary>\n                     <ExpansionPanelDetails>\n                        <Grid container spacing={8}>\n                           <Grid item md={6} style={{ width: '100%' }}>\n                              <Paper>\n                                 <Table>\n                                    <TableBody>\n                                       <TableRow>\n                                          <TableCell>\n                                             <strong>Email</strong>\n                                          </TableCell>\n                                          <TableCell>{record.user.email}</TableCell>\n                                       </TableRow>\n                                       <TableRow>\n                                          <TableCell>\n                                          <strong>Birthdate</strong>\n                                          </TableCell>\n                                          <TableCell>{record.user.dob}</TableCell>\n                                       </TableRow>\n                                       <TableRow>\n                                          <TableCell>\n                                          <strong>Contact</strong>\n                                          </TableCell>\n                                          <TableCell>{record.user.contact_no}</TableCell>\n                                       </TableRow>\n                                    </TableBody>\n                                 </Table>\n                              </Paper>\n                           </Grid>\n                           <Grid item md={6} style={{ width: '100%' }}>\n                              <Paper>\n                                 <Table>\n                                    <TableBody>\n\n                                       {\n                                          _.map(record.roles, role => {\n                                             return <TableRow>\n                                             <TableCell>\n                                                <strong>{role.clinic.clinic_name}</strong>\n                                             </TableCell>\n                                             <TableCell style={{ textAlign: 'right' }}>\n                                                <Button size=\"small\" color=\"secondary\" onClick={() => this.onDeleteRole(true, role.id)}>\n                                                   REMOVE\n                                                </Button>\n                                             </TableCell>\n                                          </TableRow>\n                                          })\n                                       }\n                                       \n                                    </TableBody>\n                                 </Table>\n                              </Paper>\n                           </Grid>\n                        </Grid>\n\n                     </ExpansionPanelDetails>\n                     <ExpansionPanelActions style={{ justifyContent: 'flex-start' }}>\n                        {\n                           record.user.role !== 'MAIN_OWNER' ? <Button size=\"small\" color=\"secondary\" onClick={() => this.onDeleteUser(true, record.user.id)}>\n                              DELETE USER\n                           </Button> : null\n                        }\n                        \n\n                        <Button size=\"small\" color=\"primary\" onClick={() => this.showUserRole(true, record.user.id)}>\n                           Assign to a clinic\n                        </Button>\n                     </ExpansionPanelActions>\n                  </ExpansionPanel>\n               })\n            }\n            \n            <UserForm \n               open={this.state.showRegistration} \n               closeForm={() => this.showRegistration(false)} \n               refreshList={() => this.fetchData()}   \n            />\n\n            <ClinicUserForm \n               open={this.state.showUserRole} \n               closeForm={() => this.showUserRole(false)}\n               userID={this.state.selectedUserID}\n               refreshList={() => this.fetchData()}   \n            />\n\n            <CConfirm\n               open={this.state.deleteRoleOpen}\n               onClose={() => this.onDeleteRole(false, '')}\n               onOk={() => this.onDeleteRole(false, '')}\n               title={'Delete Confirmation'}\n               message={`Are you sure you want to delete this record?`}\n               actions={[\n                  { actionTitle: 'Confirm', action: () => this.deleteRoleSuccess(), actionType: 'primary' },\n                  { actionTitle: 'Cancel', action: () => this.onDeleteRole(false, ''), actionType: 'secondary' }\n               ]}\n            />\n\n            <CConfirm\n               open={this.state.deleteUserOpen}\n               onClose={() => this.deleteCardOpen(false)}\n               onOk={() => this.deleteCardOpen(false)}\n               title={'Delete Confirmation'}\n               message={`Are you sure you want to delete this record?`}\n               actions={[\n                  { actionTitle: 'Confirm', action: () => this.deleteUserSuccess(), actionType: 'primary' },\n                  { actionTitle: 'Cancel', action: () => this.onDeleteUser(false, ''), actionType: 'secondary' }\n               ]}\n            />\n         </div>\n      )\n   }\n}\n\nManageUsers.propTypes = {\n   classes: PropTypes.object.isRequired,\n }\n\nexport default withStyles(styles, { withTheme: true })(ManageUsers)","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\nimport _ from 'lodash'\n\nconst styles = {\n   root: {\n     flexGrow: 1,\n   },\n   grow: {\n     flexGrow: 1,\n   }\n}\n\nclass Settings extends React.Component {\n   render() {\n      const { classes, theme } = this.props;\n\n      return (\n         <div className={classes.root}>\n\n         </div>\n      )\n   }\n}\n\n\nexport default withStyles(styles, { withTheme: true })(Settings)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport { Appointments, Patients } from 'components'\n\nfunction TabContainer(props) {\n  return (\n    <Typography component=\"div\" style={{ padding: 15 }}>\n      {props.children}\n    </Typography>\n  )\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  }\n})\n\nclass ClinicDashboard extends React.Component {\n  state = {\n    value: 0\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { value } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Tabs value={value} onChange={this.handleChange}>\n            <Tab label=\"Patients\" />\n            {/* <Tab label=\"Appointments\" /> */}\n          </Tabs>\n        </AppBar>\n        {value === 0 && <TabContainer>\n            <Patients {...this.props} />\n        </TabContainer>}\n        {value === 1 && <TabContainer>\n            <Appointments {...this.props} />\n        </TabContainer>}\n      </div>\n    );\n  }\n}\n\nClinicDashboard.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(ClinicDashboard)","import { get, post, destroy } from '../rest'\n\nexport let _getPatients = (callback = null) => {\n  console.log('_getPatients called')\n  get('/api/v1/patients')\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _getPatients', e)\n    })\n}\n\nexport let _getPatientsByClinic = (clinicID, callback = null) => {\n  console.log('_getPatientsByClinic called')\n  get(`/api/v1/patients/by_clinic/${clinicID}`)\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _getPatientsByClinic', e)\n    })\n}\n\nexport let _createPatient = (data, callback = null) => {\n  console.log('_createPatient called')\n  post('/api/v1/patient', data)\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _savePatient', e)\n    })\n}\n\nexport let _savePatient = (data, callback = null) => {\n  console.log('_savePatient called')\n  post('/api/v1/patient', data)\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _savePatient', e)\n    })\n}\n\nexport let _deletePatient = (patientId, callback = null) => {\n  console.log('_deletePatient called')\n  destroy(`/api/v1/patient/${patientId}`)\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _deletePatient', e)\n    })\n}\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'\nimport { Typography, Grid } from '@material-ui/core'\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport FaceIcon from '@material-ui/icons/Face';\nimport DoneIcon from '@material-ui/icons/Done';\nimport SearchIcon from '@material-ui/icons/Search';\nimport IconButton from '@material-ui/core/IconButton'\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase'\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\n\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\n\nimport { RouteTo } from '../Utils/RouterAction'\nimport { PatientForm, CConfirm } from 'components'\nimport { _getPatientsByClinic } from '../../rest/patient.api'\n\nimport _ from 'lodash'\n\nconst styles = theme => ({\n   root: {\n      flexGrow: 1,\n   },\n   grow: {\n      flexGrow: 1,\n   },\n   searchRoot: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%',\n   },\n   chip: {\n     margin: theme.spacing.unit,\n   },\n   input: {\n      marginLeft: 8,\n      flex: 1,\n      width: '100%'\n   },\n   iconButton: {\n      padding: 10,\n   },\n   avatar: {\n      margin: 10,\n   },\n   orangeAvatar: {\n      color: '#fff',\n      backgroundColor: deepOrange[500],\n   },\n   purpleAvatar: {\n      color: '#fff',\n      backgroundColor: deepPurple[500],\n   },\n})\nfunction ListItemLink(props) {\n   return <ListItem button component=\"a\" {...props} />;\n}\n \nclass Patients extends React.Component {\n   state = {\n      expanded: 0,\n      data: [],\n      openPatientForm: false\n   }\n\n   componentDidMount(){\n      this.fetchData()\n   }\n\n   fetchData = () => {\n      _getPatientsByClinic(this.props.match.params.clinicID, data => {\n         this.setState({ data })\n      })\n   }\n\n   openPatientForm = val => {\n      this.setState({ openPatientForm: val })\n   }\n\n   handleChange = panel => (event, expanded) => {\n      this.setState({\n        expanded: expanded ? panel : false,\n      })\n   }\n\n   handleDelete = () => {\n      alert('You clicked the delete icon.')\n   }\n\n   patientSelect = record => {\n      this.goTo('/patient/' + record.id)\n   }\n\n   goTo = path => {\n      RouteTo(this.props, path)\n   }\n\n   render() {\n      const { classes, theme } = this.props\n      const { expanded } = this.state\n      \n      return (\n         <div className={classes.root}>\n\n               <Grid container>\n                  <Grid item md={10} xs={8}>\n                     <Paper className={classes.searchRoot} style={{ marginBottom: 10, paddingLeft: 10 }}>\n                        <InputBase className={classes.input} placeholder=\"Search patient\" />\n                     </Paper>\n                  </Grid>\n                  <Grid item md={2} xs={4} style={{ paddingLeft: 10 }}>\n                     <Button variant=\"contained\" color=\"primary\" style={{ width: '100%' }} onClick={() => this.openPatientForm(true)}>ADD PATIENT</Button>\n                  </Grid>\n               </Grid>\n\n            <List component=\"nav\">\n               {\n                  _.map(this.state.data, (record, idx) => {\n                     let avatarClass = record.gender === 'M' ? classes.purpleAvatar : classes.orangeAvatar\n                     \n                     return <ListItem button style={{ paddingLeft: 0 }} onClick={() => this.patientSelect(record)}>\n                        <ListItemIcon>\n                           <Avatar className={avatarClass}>{record.gender[0]}</Avatar>\n                        </ListItemIcon>\n                        <ListItemText primary={`${record.lastname}, ${record.firstname} ${record.middlename}`} />\n                     </ListItem>\n                  })\n               }\n            </List>\n\n            <PatientForm \n               open={this.state.openPatientForm} \n               closeForm={() => this.openPatientForm(false)}\n               refreshList={() => this.fetchData()}\n               {...this.props}\n            />\n            \n         </div>\n      )\n   }\n}\n\nPatients.propTypes = {\n   classes: PropTypes.object.isRequired,\n }\n\nexport default withStyles(styles, { withTheme: true })(Patients)","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'\nimport { Typography, Grid } from '@material-ui/core'\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport FaceIcon from '@material-ui/icons/Face';\nimport DoneIcon from '@material-ui/icons/Done';\nimport SearchIcon from '@material-ui/icons/Search';\nimport IconButton from '@material-ui/core/IconButton'\n\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase'\n\nimport _ from 'lodash'\n\nconst styles = theme => ({\n   root: {\n      flexGrow: 1,\n   },\n   grow: {\n      flexGrow: 1,\n   },\n   searchRoot: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%',\n   },\n   chip: {\n     margin: theme.spacing.unit,\n   },\n   input: {\n      marginLeft: 8,\n      flex: 1,\n      width: '100%'\n   },\n   iconButton: {\n      padding: 10,\n   },\n})\n\nclass Appointments extends React.Component {\n   state = {\n      expanded: 0,\n      data: []\n   }\n\n   componentDidMount(){\n      this.fetchData()\n   }\n\n   fetchData = () => {\n      let data = [\n         { id: 3, \n            employee_name: 'Micah Lumaad', \n            email: 'micahlumaad@gmail.com', \n            dob: '05/13/1990', \n            gender: 'male', \n            contact: '+639255055519',\n            clinics: [\n               { id: 1, clinic_name: 'Ace Dermatology', role: 'SF' },\n               { id: 2, clinic_name: 'Ace Dental Clinic', role: 'SF' },\n         ]},\n         { id: 1, \n            employee_name: 'Ace Jordan Lumaad', \n            email: 'acelumaad@gmail.com', \n            dob: '03/13/1990', \n            gender: 'male',\n            contact: '+639255055519',\n            clinics: [\n               { id: 1, clinic_name: 'Ace Dermatology', role: 'OR' },\n               { id: 2, clinic_name: 'Ace Dermatology', role: 'DR' },\n               { id: 3, clinic_name: 'Ace Dental Clinic', role: 'SF' },\n         ]},\n         { id: 2, \n            employee_name: 'Gwen Lumaad', \n            email: 'gwenlumaad@gmail.com', \n            dob: '01/13/1990', \n            gender: 'female', \n            contact: '+639255055519',\n            clinics: [\n               { id: 1, clinic_name: 'Ace Dermatology', role: 'DR' },\n               { id: 2, clinic_name: 'Ace Dental Clinic', role: 'DR' },\n         ]},\n\n      ]\n\n      this.setState({\n         data\n      })\n   }\n   handleChange = panel => (event, expanded) => {\n      this.setState({\n        expanded: expanded ? panel : false,\n      })\n   }\n\n   handleDelete = () => {\n      alert('You clicked the delete icon.')\n   }\n\n   render() {\n      const { classes, theme } = this.props\n      const { expanded } = this.state\n\n      return (\n         <div className={classes.root}>\n\n            <Paper className={classes.searchRoot} style={{ marginBottom: 10, paddingLeft: 10 }}>\n               <InputBase className={classes.input} placeholder=\"Search patients\" />\n               <IconButton className={classes.iconButton} aria-label=\"Search\">\n                  <SearchIcon />\n               </IconButton>\n            </Paper>\n\n            {\n               _.map(this.state.data, (record, idx) => {\n                  return <ExpansionPanel>\n                     <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={classes.heading}><strong>{record.employee_name}</strong></Typography>\n                     </ExpansionPanelSummary>\n                     <ExpansionPanelDetails style={{ padding: 0 }}>\n                        <Table>\n                           <TableBody>\n                              <TableRow>\n                                 <TableCell>\n                                    <strong>Email</strong>\n                                 </TableCell>\n                                 <TableCell>{record.email}</TableCell>\n                              </TableRow>\n                              <TableRow>\n                                 <TableCell>\n                                 <strong>Birthdate</strong>\n                                 </TableCell>\n                                 <TableCell>{record.dob}</TableCell>\n                              </TableRow>\n                              <TableRow>\n                                 <TableCell>\n                                 <strong>Gender</strong>\n                                 </TableCell>\n                                 <TableCell>{record.gender}</TableCell>\n                              </TableRow>\n                              <TableRow>\n                                 <TableCell>\n                                 <strong>Contact</strong>\n                                 </TableCell>\n                                 <TableCell>{record.contact}</TableCell>\n                              </TableRow>\n                           </TableBody>\n                        </Table>\n                     </ExpansionPanelDetails>\n                     <ExpansionPanelActions style={{ justifyContent: 'flex-start' }}>\n                        <Button size=\"small\" color=\"primary\">EDIT</Button>\n                        <Button size=\"small\" color=\"secondary\">\n                           REMOVE\n                        </Button>\n                     </ExpansionPanelActions>\n                  </ExpansionPanel>\n               })\n            }\n            \n         </div>\n      )\n   }\n}\n\nAppointments.propTypes = {\n   classes: PropTypes.object.isRequired,\n }\n\nexport default withStyles(styles, { withTheme: true })(Appointments)","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Fab from '@material-ui/core/Fab';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Avatar from '@material-ui/core/Avatar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AddIcon from '@material-ui/icons/Add';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nimport { PatientInformation, PatientHistory, PatientMedications } from 'components'\n\nfunction TabContainer(props) {\n  return (\n    <Typography component=\"div\">\n      {props.children}\n    </Typography>\n  )\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  }\n})\n\nclass PatientDashboard extends React.Component {\n  state = {\n    value: 0\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  }\n\n  render() {\n      const { classes } = this.props;\n      const { value } = this.state;\n\n      let patient = {\n         id: 5,\n         patient_name: \"Ace Jordan Lumaad\",\n         details: 'M | 03/13/1990',\n         avatar: 'https://material-ui.com/static/images/avatar/1.jpg',\n      }\n\n    return (\n      <div className={classes.root}>\n\n        <div>\n          <Fragment key={patient.id}>\n              <ListItem button>\n                <Avatar alt=\"Profile Picture\" src={patient.avatar} />\n                <ListItemText primary={patient.patient_name} secondary={patient.details} />\n              </ListItem>\n          </Fragment>\n          <AppBar position=\"static\">\n              <Tabs value={value} onChange={this.handleChange}>\n                <Tab label=\"History\" />\n                {/* <Tab label=\"Medications\" /> */}\n                <Tab label=\"Information\" />\n              </Tabs>\n          </AppBar>\n        </div>\n        <div>\n          {value === 0 && <TabContainer>\n                <PatientHistory {...this.props} />\n          </TabContainer>}\n          {value === 1 && <TabContainer>\n                <PatientMedications {...this.props} />\n          </TabContainer>}\n          {value === 2 && <TabContainer>\n                <PatientInformation {...this.props} />\n          </TabContainer>}\n        </div>\n\n      </div>\n    );\n  }\n}\n\nPatientDashboard.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(PatientDashboard)","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'\nimport { Typography, Grid } from '@material-ui/core'\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport FaceIcon from '@material-ui/icons/Face';\nimport DoneIcon from '@material-ui/icons/Done';\n\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport { TextField } from '@material-ui/core'\n\nimport _ from 'lodash'\n\nconst styles = theme => ({\n   root: {\n      flexGrow: 1,\n   },\n   grow: {\n      flexGrow: 1,\n   },\n   chip: {\n     margin: theme.spacing.unit,\n   }\n})\n\nclass PatientInformation extends React.Component {\n   state = {\n      expanded: 0,\n      data: []\n   }\n\n   componentDidMount(){\n      this.fetchData()\n   }\n\n   fetchData = () => {\n\n   }\n\n   render() {\n      const { classes } = this.props\n\n      return (\n         <div className={classes.root} style={{ padding: 15 }}>\n            <form noValidate autoComplete=\"off\">\n               <TextField\n                  label={'Firstname'}\n                  value={this.state.data.chief_complaint}\n                  fullWidth\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                        shrink: true,\n                  }}\n               />\n\n               <TextField\n                  label={'Middlename'}\n                  value={this.state.data.chief_complaint}\n                  fullWidth\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                        shrink: true,\n                  }}\n               />\n               \n               <TextField\n                  label={'Lastname'}\n                  value={this.state.data.chief_complaint}\n                  fullWidth\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                        shrink: true,\n                  }}\n               />\n\n               <Grid container fullWidth>\n                  <Grid item md={6} xs={6} style={{ paddingRight: 5 }}>\n                     <TextField\n                        label={'Birthdate'}\n                        value={this.state.data.dob}\n                        type=\"date\"\n                        defaultValue=\"03/13/1990\"\n                        fullWidth\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        InputLabelProps={{\n                              shrink: true,\n                        }}\n                     /> \n                     </Grid>\n                  <Grid item md={6} xs={6} style={{ paddingLeft: 5 }}>\n                     <TextField\n                        label={'Age'}\n                        value={this.state.data.age}\n                        fullWidth\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        InputLabelProps={{\n                           shrink: true,\n                        }}\n                     />\n                  </Grid>\n               </Grid>\n\n               <TextField\n                  select\n                  label=\"Gender\"\n                  className={classes.textField}\n                  value={this.state.gender}\n                  onChange={() => console.log('This')}\n                  SelectProps={{\n                     MenuProps: {\n                     className: classes.menu,\n                     },\n                  }}\n                  fullWidth\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                        shrink: true,\n                  }}>\n                  <MenuItem value={'MALE'}>MALE</MenuItem>\n                  <MenuItem value={'FEMALE'}>FEMALE</MenuItem>\n               </TextField>\n\n               <TextField\n                  label={'Blood Type'}\n                  value={this.state.data.blood_type}\n                  fullWidth\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                        shrink: true,\n                  }}\n               />\n\n               <TextField\n                  label={'Contact No'}\n                  value={this.state.data.contact_no}\n                  fullWidth\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                        shrink: true,\n                  }}\n               />\n\n               <TextField\n                  label={'Email Address'}\n                  value={this.state.data.email_address}\n                  fullWidth\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                        shrink: true,\n                  }}\n               />\n\n            </form>\n         </div>\n      )\n   }\n}\n\nPatientInformation.propTypes = {\n   classes: PropTypes.object.isRequired,\n }\n\nexport default withStyles(styles, { withTheme: true })(PatientInformation)","import { get, post, destroy } from '../rest'\n\nexport let _getPatientHistories = (callback = null) => {\n  console.log('_getPatientHistories called')\n  get('/api/v1/patient_histories')\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _getPatientHistories', e)\n    })\n}\n\nexport let _getPatientHistoriesByPatient = (patientID, callback = null) => {\n  console.log('_getPatientHistories called')\n  get(`/api/v1/patient_history/patient/${patientID}`)\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _getPatientHistories', e)\n    })\n}\n\nexport let _getPatientHistory = (id, callback = null) => {\n  console.log('_getPatientHistory called')\n  get(`/api/v1/patient_history/${id}`)\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _getPatientHistory', e)\n    })\n}\n\nexport let _createPatientHistory = (data, callback = null) => {\n  console.log('_createPatientHistory called')\n  post('/api/v1/patient_history', data)\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _createPatientHistory', e)\n    })\n}\n\nexport let _deletePatientHistory = (patient_historyId, callback = null) => {\n  console.log('_deletePatientHistory called')\n  destroy(`/api/v1/patient_history/${patient_historyId}`)\n    .then(response => {\n      if (callback) callback(response.data)\n    })\n    .catch(e => {\n      console.log('Error in _deletePatientHistory', e)\n    })\n}\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'\nimport { Typography, Grid } from '@material-ui/core'\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport FaceIcon from '@material-ui/icons/Face';\nimport DoneIcon from '@material-ui/icons/Done';\n\nimport { ActionBar, PatientHistoryForm } from 'components'\nimport { _getPatientHistoriesByPatient, _deletePatientHistory } from '../../rest/patient_history.api'\n\nimport { CConfirm } from 'components'\n\nimport _ from 'lodash'\n\nconst styles = theme => ({\n   root: {\n      flexGrow: 1,\n   },\n   grow: {\n      flexGrow: 1,\n   },\n   chip: {\n     margin: theme.spacing.unit,\n   },\n   heading: {\n      textTransform: 'uppercase'\n   }\n})\n\nclass PatientHistory extends React.Component {\n   state = {\n      expanded: 0,\n      data: [],\n      openDataForm: false,\n      selectedDataID: ''\n   }\n\n   componentDidMount(){\n      this.fetchData()\n      console.log(this.props)\n   }\n\n   fetchData = () => {\n      _getPatientHistoriesByPatient(this.props.match.params.patientID, data => {\n         this.setState({\n            data\n         })\n      })\n   }\n\n   handleChange = panel => (event, expanded) => {\n      this.setState({\n        expanded: expanded ? panel : false,\n      })\n   }\n\n   handleDelete = () => {\n      alert('You clicked the delete icon.')\n   }\n\n   openDataForm = val => {\n      this.setState({ openDataForm: val })\n   }\n\n   onDeleteData = (val, dataID) => {\n      this.setState({ confirmDelete: val, selectedDataID: dataID })\n   }\n\n   deleteDataSuccess = () => {\n      _deletePatientHistory(this.state.selectedDataID, () => {\n         this.fetchData()\n         this.onDeleteData(false, '')\n      })\n   }\n\n   render() {\n      const { classes } = this.props\n\n      return (\n         <div className={classes.root}>\n\n            <ActionBar style={{ marginBottom: 10 }}>\n               <Button color=\"primary\" onClick={() => this.openDataForm(true)}>\n                  Add New Patient History Record\n               </Button>\n            </ActionBar>\n\n            {\n               _.map(this.state.data, (record, idx) => {\n                  return <ExpansionPanel>\n                     <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={classes.heading}><strong>{record.visit_datetime} - {record.chief_complaint}</strong></Typography>\n                     </ExpansionPanelSummary>\n                     <ExpansionPanelDetails>\n                        <Grid container spacing={8}>\n                           <Grid item md={12} style={{ width: '100%' }}>\n                              <Paper>\n                                 <Table>\n                                    <TableBody>\n                                       <TableRow>\n                                          <TableCell>\n                                             <strong>Chief Complaint</strong>\n                                          </TableCell>\n                                          <TableCell>{record.chief_complaint}</TableCell>\n                                       </TableRow>\n                                       <TableRow>\n                                          <TableCell>\n                                          <strong>History of Illness</strong>\n                                          </TableCell>\n                                          <TableCell>{record.history_present_illness}</TableCell>\n                                       </TableRow>\n                                       <TableRow>\n                                          <TableCell>\n                                          <strong>Physical Exam</strong>\n                                          </TableCell>\n                                          <TableCell>{record.physical_exam}</TableCell>\n                                       </TableRow>\n                                       <TableRow>\n                                          <TableCell>\n                                          <strong>Diagnosis</strong>\n                                          </TableCell>\n                                          <TableCell>{record.diagnosis}</TableCell>\n                                       </TableRow>\n                                    </TableBody>\n                                 </Table>\n                              </Paper>\n                           </Grid>\n                        </Grid>\n\n                     </ExpansionPanelDetails>\n                     <ExpansionPanelActions style={{ justifyContent: 'flex-start' }}>\n                        <Button size=\"small\" color=\"secondary\" onClick={() => this.onDeleteData(true, record.id)}>\n                           DELETE RECORD\n                        </Button>\n                     </ExpansionPanelActions>\n                  </ExpansionPanel>\n               })\n            }\n            \n            <PatientHistoryForm \n               open={this.state.openDataForm} \n               closeForm={() => this.openDataForm(false)} \n               refreshList={() => this.fetchData()}\n               dataID={this.props.match.params.patientID}\n            />\n\n            <CConfirm\n               open={this.state.confirmDelete}\n               onClose={() => this.onDeleteData(false, '')}\n               onOk={() => this.onDeleteData(false, '')}\n               title={'Delete Confirmation'}\n               message={`Are you sure you want to delete this record?`}\n               actions={[\n                  { actionTitle: 'Confirm', action: () => this.deleteDataSuccess(), actionType: 'primary' },\n                  { actionTitle: 'Cancel', action: () => this.onDeleteData(false, ''), actionType: 'secondary' }\n               ]}\n            />\n         </div>\n      )\n   }\n}\n\nPatientHistory.propTypes = {\n   classes: PropTypes.object.isRequired,\n }\n\nexport default withStyles(styles, { withTheme: true })(PatientHistory)","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'\nimport { Typography, Grid } from '@material-ui/core'\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\n\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\n\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport { TextField } from '@material-ui/core'\n\nimport _ from 'lodash'\n\nconst styles = theme => ({\n   root: {\n      flexGrow: 1,\n   },\n   grow: {\n      flexGrow: 1,\n   },\n   chip: {\n      margin: theme.spacing.unit,\n   },\n   card: {\n      minWidth: 275,\n   },\n   title: {\n      fontSize: 14,\n   },\n})\n\nclass PatientMedications extends React.Component {\n   state = {\n      expanded: 0,\n      data: []\n   }\n\n   componentDidMount(){\n      this.fetchData()\n   }\n\n   fetchData = () => {\n      let data = { \n         date: '03/13/1990',\n         id: 1, \n         chief_complaint: 'Fever, cough', \n         hpi: 'The quick little brown fox jumps over the back of the lazy dog', \n         physical_exam: 'The quick little brown fox jumps over the back of the lazy dog', \n         diagnosis: 'The quick little brown fox jumps over the back of the lazy dog',\n      }\n\n      this.setState({\n         data\n      })\n   }\n\n   render() {\n      const { classes } = this.props\n\n      return (\n         <div className={classes.root} style={{ padding: 15 }}>\n            <form noValidate autoComplete=\"off\">\n               <Grid container spacing={16}>\n                  <Grid item md={6} xs={12}>\n                     <Card className={classes.card}>\n                        <CardContent>\n                           <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                              Available Medications\n                           </Typography>\n                        </CardContent>\n                     </Card>\n                  </Grid>\n                  <Grid item md={6} xs={12}>\n                     <Card className={classes.card} fullWidth>\n                        <CardContent>\n                           <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                              Prescriptions\n                           </Typography>\n                           \n                        </CardContent>\n                     </Card>\n                  </Grid>\n               </Grid>\n            </form>\n         </div>\n      )\n   }\n}\n\nPatientMedications.propTypes = {\n   classes: PropTypes.object.isRequired,\n }\n\nexport default withStyles(styles, { withTheme: true })(PatientMedications)","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { CConfirm } from 'components'\n\nconst styles = {\n  card: {\n    width: '99%',\n    padding: 5,\n    marginLeft: 5,\n    marginBottom: 5,\n    marginRight: 5\n  },\n  media: {\n    objectFit: 'cover',\n  },\n}\n\nclass ClinicCard extends React.Component {\n   \n   state = {\n      deleteOpen: false\n   }\n\n   deleteCardOpen = val => {\n      this.setState({ deleteOpen: val })\n   }\n\n   onDelete = () => {\n      this.props.onDelete()\n      this.deleteCardOpen(false)\n   }\n\n   render(){\n\n      const { classes } = this.props\n\n      return (\n         <div>\n            <Card className={classes.card}>\n            <CardActionArea onClick={() => this.props.onClick()}>\n\n               <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                     {this.props.data.clinic_name || 'No clinic name'}\n                  </Typography>\n                  <Typography component=\"p\">\n                     {this.props.data.clinic_address || 'Address not specified'}\n                  </Typography>\n                  <Typography component=\"p\">\n                     {this.props.data.clinic_contact || 'No contact number specified'}\n                  </Typography>\n               </CardContent>\n            </CardActionArea>\n            <CardActions>\n               {/* <Button size=\"small\" color=\"primary\">\n                  EDIT\n               </Button> */}\n               <Button size=\"small\" color=\"secondary\" onClick={() => this.deleteCardOpen(true)}>\n                  REMOVE\n               </Button>\n            </CardActions>\n            </Card>\n     \n            <CConfirm\n               open={this.state.deleteOpen}\n               onClose={() => this.deleteCardOpen(false)}\n               onOk={() => this.deleteCardOpen(false)}\n               title={'Delete Confirmation'}\n               message={`Are you sure you want to delete ${this.props.data.clinic_name}?`}\n               actions={[\n                  { actionTitle: 'Delete', action: () => this.onDelete(), actionType: 'primary' },\n                  { actionTitle: 'Cancel', action: () => this.deleteCardOpen(false), actionType: 'secondary' }\n               ]}\n            />\n         </div>\n      )\n   }\n}\n\nClinicCard.propTypes = {\n   classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(ClinicCard)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { CConfirm } from 'components'\nimport { _createClinic } from '../../rest/clinic.api'\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst styles = theme => ({\n  paper: {\n    position: 'absolute',\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: 'none',\n  },\n})\n\nclass ClinicForm extends React.Component {\n    state =  {\n        form: {},\n        confirm: false\n    }\n\n    showPopup = val => {\n        this.setState({ confirm: val })\n    }\n\n    submitForm = () => {\n        _createClinic(this.state.form, () => {\n            this.showPopup(false)\n            this.props.closeForm()\n            this.props.refreshList()\n        })\n    }\n\n    handleChange = (field, e) => {\n        let form = this.state.form\n        form[field] = e.target.value\n\n        this.setState({\n            form\n        })\n    }\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            <Modal\n                open={this.props.open}\n                onClose={this.handleClose}\n            >\n                <div style={getModalStyle()} className={classes.paper}>\n                    <Typography variant=\"h6\" id=\"modal-title\" style={{ marginBottom: 20 }}>\n                        Add New Clinic Form\n                    </Typography>\n\n                    <form noValidate autoComplete=\"off\">\n                        <TextField\n                            id=\"clinic_name\"\n                            label=\"Clinic Name\"\n                            placeholder=\"Enter name of clinic\"\n                            fullWidth\n                            margin=\"dense\"\n                            onChange={val => this.handleChange('clinic_name', val)}\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n\n                        <TextField\n                            id=\"clinicaddress\"\n                            label=\"Clinic Address\"\n                            placeholder=\"Enter Address of Clinic\"\n                            onChange={val => this.handleChange('clinic_address', val)}\n                            fullWidth\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n\n                        <TextField\n                            id=\"cliniccontact\"\n                            label=\"Clinic Contact No\"\n                            placeholder=\"Enter contact number of clinic\"\n                            onChange={val => this.handleChange('clinic_contact', val)}\n                            fullWidth\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n\n                        <Grid container>\n                            <Grid item md={6} xs={6}>\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => this.showPopup(true)} style={{ marginTop: 20 }}>\n                                    Submit Form\n                                </Button>\n                            </Grid>\n                            <Grid item md={6} xs={6} style={{ textAlign: 'right' }}>\n                                <Button variant=\"contained\" color=\"secondary\" onClick={() => this.props.closeForm()} style={{ marginTop: 20 }}>\n                                    Cancel\n                                </Button>\n                            </Grid>\n                        </Grid>\n\n                        <CConfirm\n                            open={this.state.confirm}\n                            onClose={() => this.showPopup(false)}\n                            title={'Add New Clinic'}\n                            message={'Are sure you want to save this clinic information?'}\n                            actions={[\n                                { actionTitle: 'Yes', action: () => this.submitForm(), actionType: 'primary' },\n                                { actionTitle: 'Cancel', action: () => this.showPopup(false), actionType: 'secondary' }\n                            ]}\n                        />\n\n                    </form>\n                </div>\n            </Modal>\n        )\n    }\n}\n\nClinicForm.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nconst ClinicFormWrapped = withStyles(styles)(ClinicForm)\n\nexport default ClinicFormWrapped","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport { CConfirm } from 'components'\nimport { _createUser, _getUsers, _deleteUser } from '../../rest/users.api'\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst styles = theme => ({\n  paper: {\n    position: 'absolute',\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: 'none',\n  },\n})\n\nclass UserForm extends React.Component {\n    state =  {\n        form: {},\n        confirm: false\n    }\n\n    showPopup = val => {\n        this.setState({ confirm: val })\n    }\n\n    submitForm = () => {\n        _createUser(this.state.form, () => {\n            this.showPopup(false)\n            this.props.closeForm()\n            this.props.refreshList()\n        })\n    }\n\n    handleChange = (field, e) => {\n        let form = this.state.form\n        form[field] = e.target.value\n        \n        this.setState({\n            form\n        })\n    }\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Modal open={this.props.open}>\n                    <Grid \n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\">\n                        <Grid item>\n                            <Paper elevation={2} style={{ padding: 20 }}>\n                                <Typography variant=\"h6\" style={{ marginBottom: 20 }}>\n                                    User Registration Form\n                                </Typography>\n                                <form noValidate autoComplete=\"off\">\n                                    <Grid container spacing={16}>\n                                        <Grid item md={4} xs={12}>\n                                            <TextField\n                                                id=\"lastname\"\n                                                label=\"Lastname\"\n                                                placeholder=\"Enter Lastname\"\n                                                fullWidth\n                                                margin=\"dense\"\n                                                variant=\"outlined\"\n                                                onChange={value => this.handleChange('lastname', value)}\n                                                required={true}\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                                inputProps={{ autoCapitalize: true }}\n                                            />\n                                        </Grid>\n                                        <Grid item md={4} xs={12}>\n                                            <TextField\n                                                id=\"firstname\"\n                                                label=\"Firstname\"\n                                                placeholder=\"Enter Firstname\"\n                                                fullWidth\n                                                required={true}\n                                                margin=\"dense\"\n                                                onChange={value => this.handleChange('firstname', value)}\n                                                variant=\"outlined\"\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                            />\n                                        </Grid>\n                                        <Grid item md={4} xs={12}>\n                                            <TextField\n                                                id=\"middlename\"\n                                                label=\"Middlename\"\n                                                placeholder=\"Enter Middlename\"\n                                                onChange={value => this.handleChange('middlename', value)}\n                                                fullWidth\n                                                required={true}\n                                                margin=\"dense\"\n                                                variant=\"outlined\"\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                            />\n                                        </Grid>\n                                    </Grid>\n\n                                    <TextField\n                                        label={'Birthdate'}\n                                        onChange={value => this.handleChange('dob', value)}\n                                        type=\"date\"\n                                        defaultValue=\"03/13/1990\"\n                                        fullWidth\n                                        required={true}\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    /> \n\n                                    <TextField\n                                        id=\"contact\"\n                                        label=\"Contact Number\"\n                                        placeholder=\"Enter Contact Number\"\n                                        onChange={value => this.handleChange('contact_no', value)}\n                                        fullWidth\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n\n                                    <TextField\n                                        id=\"email\"\n                                        label=\"Email\"\n                                        placeholder=\"Enter Email\"\n                                        onChange={value => this.handleChange('email', value)}\n                                        fullWidth\n                                        required={true}\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n\n                                    <TextField\n                                        id=\"password\"\n                                        label=\"Password\"\n                                        placeholder=\"Enter Password\"\n                                        onChange={value => this.handleChange('password', value)}\n                                        fullWidth\n                                        type=\"password\"\n                                        required={true}\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n\n                                    <TextField\n                                        id=\"confirm_password\"\n                                        label=\"Confirm Password\"\n                                        placeholder=\"Enter Confirm\"\n                                        onChange={value => this.handleChange('confirm', value)}\n                                        fullWidth\n                                        type=\"password\"\n                                        required={true}\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                    \n                                    <TextField\n                                        id=\"role\"\n                                        select\n                                        label=\"Role\"\n                                        onChange={value => this.handleChange('role', value)}\n                                        value={this.state.form.role}\n                                        SelectProps={{\n                                            MenuProps: {\n                                            className: classes.menu,\n                                            },\n                                        }}\n                                        fullWidth\n                                        required={true}\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                                shrink: true,\n                                        }}>\n                                        <MenuItem value={'OWNER'}>OWNER</MenuItem>\n                                        <MenuItem value={'DOCTOR'}>DOCTOR</MenuItem>\n                                        <MenuItem value={'STAFF'}>STAFF</MenuItem>\n                                    </TextField>\n\n                                    <Grid container>\n                                        <Grid item md={6} xs={6}>\n                                            <Button variant=\"contained\" color=\"primary\" onClick={() => this.showPopup(true)} style={{ marginTop: 20 }}>\n                                                Register\n                                            </Button>\n                                        </Grid>\n                                        <Grid item md={6} xs={6} style={{ textAlign: 'right' }}>\n                                            <Button variant=\"contained\" color=\"secondary\" onClick={() => this.props.closeForm()} style={{ marginTop: 20 }}>\n                                                Cancel\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n\n                                </form>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Modal>\n\n                <CConfirm\n                    open={this.state.confirm}\n                    onClose={() => this.showPopup(false)}\n                    onOk={() => this.showPopup(false)}\n                    title={'New User Confirmation'}\n                    message={'Are sure you want to save this user information?'}\n                    actions={[\n                        { actionTitle: 'Confirm', action: () => this.submitForm(), actionType: 'primary' },\n                        { actionTitle: 'Cancel', action: () => this.showPopup(false), actionType: 'secondary' }\n                    ]}\n                />\n            </div>\n        )\n    }\n}\n\nUserForm.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nconst UserFormWrapped = withStyles(styles)(UserForm)\n\nexport default UserFormWrapped","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport { CConfirm } from 'components'\nimport { _createUser, _getUsers, _deleteUser, _getDoctorsByClinic } from '../../rest/users.api'\nimport { _createPatient } from '../../rest/patient.api'\n\nimport _ from 'lodash'\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst styles = theme => ({\n  paper: {\n    position: 'absolute',\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: 'none',\n  },\n})\n\nclass PatientForm extends React.Component {\n    state =  {\n        form: {},\n        confirm: false,\n        doctors: []\n    }\n\n    componentDidMount(){\n        this.fetchDoctors()\n    }\n\n    showPopup = val => {\n        this.setState({ confirm: val })\n    }\n\n    fetchDoctors = () => {\n        _getDoctorsByClinic(this.props.match.params.clinicID, doctors => {\n            this.setState({ doctors })\n        })\n    }\n\n    submitForm = () => {\n        let form = this.state.form;\n\n        form['clinic'] = this.props.match.params.clinicID;\n\n        _createPatient(form, () => {\n            this.showPopup(false)\n            this.props.closeForm()\n            this.props.refreshList()\n        })\n    }\n\n    handleChange = (field, e) => {\n        let form = this.state.form\n        form[field] = e.target.value\n        \n        this.setState({\n            form\n        })\n    }\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Modal open={this.props.open}>\n                    <Grid \n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\">\n                        <Grid item>\n                            <Paper elevation={2} style={{ padding: 20 }}>\n                                <Typography variant=\"h6\" style={{ marginBottom: 20 }}>\n                                    New Patient Form\n                                </Typography>\n                                <form noValidate autoComplete=\"off\">\n                                    <Grid container spacing={16}>\n                                        <Grid item md={4} xs={12}>\n                                            <TextField\n                                                id=\"lastname\"\n                                                label=\"Lastname\"\n                                                placeholder=\"Enter Lastname\"\n                                                fullWidth\n                                                margin=\"dense\"\n                                                variant=\"outlined\"\n                                                onChange={value => this.handleChange('lastname', value)}\n                                                required={true}\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                                inputProps={{ autoCapitalize: true }}\n                                            />\n                                        </Grid>\n                                        <Grid item md={4} xs={12}>\n                                            <TextField\n                                                id=\"firstname\"\n                                                label=\"Firstname\"\n                                                placeholder=\"Enter Firstname\"\n                                                fullWidth\n                                                required={true}\n                                                margin=\"dense\"\n                                                onChange={value => this.handleChange('firstname', value)}\n                                                variant=\"outlined\"\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                            />\n                                        </Grid>\n                                        <Grid item md={4} xs={12}>\n                                            <TextField\n                                                id=\"middlename\"\n                                                label=\"Middlename\"\n                                                placeholder=\"Enter Middlename\"\n                                                onChange={value => this.handleChange('middlename', value)}\n                                                fullWidth\n                                                required={true}\n                                                margin=\"dense\"\n                                                variant=\"outlined\"\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                            />\n                                        </Grid>\n                                    </Grid>\n\n                                    <TextField\n                                        label={'Birthdate'}\n                                        onChange={value => this.handleChange('dob', value)}\n                                        type=\"date\"\n                                        defaultValue=\"03/13/1990\"\n                                        fullWidth\n                                        required={true}\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    /> \n\n                                    <TextField\n                                        id=\"gender\"\n                                        select\n                                        label=\"Gender\"\n                                        onChange={value => this.handleChange('gender', value)}\n                                        value={this.state.form.gender}\n                                        SelectProps={{\n                                            MenuProps: {\n                                            className: classes.menu,\n                                            },\n                                        }}\n                                        fullWidth\n                                        required={true}\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                                shrink: true,\n                                        }}>\n                                        <MenuItem value={'MALE'}>MALE</MenuItem>\n                                        <MenuItem value={'FEMALE'}>FEMALE</MenuItem>\n                                    </TextField>\n                                    \n                                    <TextField\n                                        id=\"contact_no\"\n                                        label=\"Contact Number\"\n                                        placeholder=\"Enter Contact Number\"\n                                        onChange={value => this.handleChange('contact_no', value)}\n                                        fullWidth\n                                        required={true}\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n\n                                    <TextField\n                                        id=\"doctor\"\n                                        select\n                                        label=\"Attending Physician\"\n                                        onChange={value => this.handleChange('doctor', value)}\n                                        value={this.state.form.doctor}\n                                        SelectProps={{\n                                            MenuProps: {\n                                            className: classes.menu,\n                                            },\n                                        }}\n                                        fullWidth\n                                        required={true}\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                                shrink: true,\n                                        }}>\n                                        \n                                        {\n                                            _.map(this.state.doctors, doctor => {\n                                                return <MenuItem value={doctor.id}>Dr. {doctor.lastname}, {doctor.firstname}</MenuItem>\n                                            })\n                                        }\n                                        \n                                    </TextField>\n\n                                    <Grid container>\n                                        <Grid item md={6} xs={6}>\n                                            <Button variant=\"contained\" color=\"primary\" onClick={() => this.showPopup(true)} style={{ marginTop: 20 }}>\n                                                Save Patient\n                                            </Button>\n                                        </Grid>\n                                        <Grid item md={6} xs={6} style={{ textAlign: 'right' }}>\n                                            <Button variant=\"contained\" color=\"secondary\" onClick={() => this.props.closeForm()} style={{ marginTop: 20 }}>\n                                                Cancel\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n\n                                </form>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Modal>\n\n                <CConfirm\n                    open={this.state.confirm}\n                    onClose={() => this.showPopup(false)}\n                    onOk={() => this.showPopup(false)}\n                    title={'New Patient Confirmation'}\n                    message={'Are sure you want to save this patient information?'}\n                    actions={[\n                        { actionTitle: 'Confirm', action: () => this.submitForm(), actionType: 'primary' },\n                        { actionTitle: 'Cancel', action: () => this.showPopup(false), actionType: 'secondary' }\n                    ]}\n                />\n\n            </div>\n        )\n    }\n}\n\nPatientForm.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nconst PatientFormWrapped = withStyles(styles)(PatientForm)\n\nexport default PatientFormWrapped","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Modal from '@material-ui/core/Modal'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { CConfirm } from 'components'\nimport { _createClinicUser } from '../../rest/clinic_user.api'\nimport { _getClinics, _getClinicsOwn } from '../../rest/clinic.api'\nimport _ from 'lodash'\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst styles = theme => ({\n  paper: {\n    position: 'absolute',\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: 'none',\n  },\n})\n\nclass ClinicUserForm extends React.Component {\n    state =  {\n        form: {},\n        confirm: false,\n        clinics: []\n    }\n\n    componentDidMount(){\n        this.fetchClinics()\n    }\n\n    showPopup = val => {\n        this.setState({ confirm: val })\n    }\n\n    fetchClinics = () => {\n        _getClinicsOwn(this.fetchClinicsSuccess)\n    }\n\n    fetchClinicsSuccess = data => {\n        this.setState({ clinics: data })\n    }\n\n    submitForm = () => {\n\n        let form = this.state.form\n        form['user_id'] = this.props.userID\n\n        _createClinicUser(this.state.form, () => {\n            this.showPopup(false)\n            this.props.closeForm()\n            this.props.refreshList()\n        })\n    }\n\n    handleChange = (field, e) => {\n\n        let form = this.state.form\n        form[field] = e.target.value\n\n        this.setState({\n            form\n        })\n    }\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Modal open={this.props.open}>\n                    <Grid \n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\">\n                        <Grid item>\n                            <Paper elevation={2} style={{ padding: 20, width: 300 }}>\n                                <Typography variant=\"h6\" style={{ marginBottom: 20 }}>\n                                    User Clinic Assignment\n                                </Typography>\n                                <form noValidate autoComplete=\"off\">\n                                    <TextField\n                                        select\n                                        label=\"Select Clinic\"\n                                        className={classes.textField}\n                                        value={this.state.form.clinic_id}\n                                        onChange={val => this.handleChange('clinic_id', val)}\n                                        SelectProps={{\n                                            MenuProps: {\n                                            className: classes.menu,\n                                            },\n                                        }}\n                                        fullWidth\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                                shrink: true,\n                                        }}>\n\n                                        {\n                                            _.map(this.state.clinics, clinic => {\n                                                return <MenuItem value={clinic.id}>{clinic.clinic_name}</MenuItem>\n                                            })\n                                        }\n                                        \n                                    </TextField>\n\n                                    <Grid container>\n                                        <Grid item md={6}>\n                                            <Button variant=\"contained\" color=\"primary\" onClick={() => this.showPopup(true)} style={{ marginTop: 20 }}>\n                                                Submit Form\n                                            </Button>\n                                        </Grid>\n                                        <Grid item md={6} style={{ textAlign: 'right' }}>\n                                            <Button variant=\"contained\" color=\"secondary\" onClick={() => this.props.closeForm()} style={{ marginTop: 20 }}>\n                                                Cancel\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n\n                                </form>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Modal>\n\n                <CConfirm\n                    open={this.state.confirm}\n                    onClose={() => this.showPopup(false)}\n                    onOk={() => this.showPopup(false)}\n                    title={'Confirm Clinic Assignment'}\n                    message={'Are sure you want to assign user to this clinic?'}\n                    actions={[\n                        { actionTitle: 'Confirm', action: () => this.submitForm(), actionType: 'primary' },\n                        { actionTitle: 'Cancel', action: () => this.showPopup(false), actionType: 'secondary' }\n                    ]}\n                />\n            </div>\n        )\n    }\n}\n\nClinicUserForm.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nconst ClinicUserFormWrapped = withStyles(styles)(ClinicUserForm)\n\nexport default ClinicUserFormWrapped","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport { CConfirm } from 'components'\nimport { _createPatientHistory } from '../../rest/patient_history.api'\n\nimport _ from 'lodash'\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst styles = theme => ({\n  paper: {\n    position: 'absolute',\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: 'none',\n  },\n})\n\nclass PatientHistoryForm extends React.Component {\n    state =  {\n        form: {},\n        confirm: false\n    }\n\n    showPopup = val => {\n        this.setState({ confirm: val })\n    }\n\n    submitForm = () => {\n        let form = this.state.form;\n\n        form['patient'] = this.props.dataID;\n\n        _createPatientHistory(form, () => {\n            this.showPopup(false)\n            this.props.closeForm()\n            this.props.refreshList()\n        })\n    }\n\n    handleChange = (field, e) => {\n        let form = this.state.form\n        form[field] = e.target.value\n        \n        this.setState({\n            form\n        })\n    }\n    render() {\n\n        return (\n            <div>\n                <Modal open={this.props.open}>\n                    <Grid \n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\">\n                        <Grid item>\n                            <Paper elevation={2} style={{ padding: 20 }}>\n                                <Typography variant=\"h6\" style={{ marginBottom: 20 }}>\n                                    New Patient History Record\n                                </Typography>\n                                <form noValidate autoComplete=\"off\">\n\n                                    <TextField\n                                        label={'Visit Date/Time'}\n                                        onChange={value => this.handleChange('visit_datetime', value)}\n                                        type=\"date\"\n                                        defaultValue=\"03/13/1990\"\n                                        fullWidth\n                                        required={true}\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    /> \n\n                                    <TextField\n                                       id=\"chief_complaint\"\n                                       label=\"Chief Complaint\"\n                                       placeholder=\"Enter Chief Complaint\"\n                                       fullWidth\n                                       margin=\"dense\"\n                                       variant=\"outlined\"\n                                       onChange={value => this.handleChange('chief_complaint', value)}\n                                       required={true}\n                                       InputLabelProps={{\n                                             shrink: true,\n                                       }}\n                                       inputProps={{ autoCapitalize: true }}\n                                    />\n\n                                    <TextField\n                                       id=\"history_present_illness\"\n                                       label=\"Chief Complaint\"\n                                       placeholder=\"Enter Chief Complaint\"\n                                       fullWidth\n                                       margin=\"dense\"\n                                       variant=\"outlined\"\n                                       onChange={value => this.handleChange('history_present_illness', value)}\n                                       required={true}\n                                       InputLabelProps={{\n                                             shrink: true,\n                                       }}\n                                       inputProps={{ autoCapitalize: true }}\n                                    />\n\n                                    <TextField\n                                       id=\"physical_exam\"\n                                       label=\"Physical Exam\"\n                                       placeholder=\"Enter Physical Exam\"\n                                       fullWidth\n                                       margin=\"dense\"\n                                       variant=\"outlined\"\n                                       onChange={value => this.handleChange('physical_exam', value)}\n                                       required={true}\n                                       InputLabelProps={{\n                                             shrink: true,\n                                       }}\n                                       inputProps={{ autoCapitalize: true }}\n                                    />\n\n                                    <TextField\n                                       id=\"diagnosis\"\n                                       label=\"Diagnosis\"\n                                       placeholder=\"Enter Diagnosis\"\n                                       fullWidth\n                                       margin=\"dense\"\n                                       variant=\"outlined\"\n                                       onChange={value => this.handleChange('diagnosis', value)}\n                                       required={true}\n                                       InputLabelProps={{\n                                             shrink: true,\n                                       }}\n                                       inputProps={{ autoCapitalize: true }}\n                                    />\n\n                                    <Grid container>\n                                        <Grid item md={6} xs={6}>\n                                            <Button variant=\"contained\" color=\"primary\" onClick={() => this.showPopup(true)} style={{ marginTop: 20 }}>\n                                                Save History Record\n                                            </Button>\n                                        </Grid>\n                                        <Grid item md={6} xs={6} style={{ textAlign: 'right' }}>\n                                            <Button variant=\"contained\" color=\"secondary\" onClick={() => this.props.closeForm()} style={{ marginTop: 20 }}>\n                                                Cancel\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n\n                                </form>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Modal>\n\n                <CConfirm\n                    open={this.state.confirm}\n                    onClose={() => this.showPopup(false)}\n                    onOk={() => this.showPopup(false)}\n                    title={'Saving Confirmation'}\n                    message={'Are sure you want to save this patient history data?'}\n                    actions={[\n                        { actionTitle: 'Confirm', action: () => this.submitForm(), actionType: 'primary' },\n                        { actionTitle: 'Cancel', action: () => this.showPopup(false), actionType: 'secondary' }\n                    ]}\n                />\n            </div>\n        )\n    }\n}\n\nPatientHistoryForm.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nconst PatientHistoryFormWrapped = withStyles(styles)(PatientHistoryForm)\n\nexport default PatientHistoryFormWrapped","import React from 'react';\nimport { Grid, Button } from '@material-ui/core';\n\nclass ActionBar extends React.Component {\n    render() {\n        return (\n            <Grid container style={this.props.style}>\n                <Grid item>\n                    {this.props.children}\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nexport default ActionBar","import React from 'react';\nimport MenuIcon from '@material-ui/icons/Menu'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'\nimport {\n  Modal, AppBar, Toolbar, Typography, Button, IconButton, Grid, Paper, TextField\n} from '@material-ui/core'\nimport { CMainLayout } from 'components'\nimport { RouteTo } from '../components/Utils/RouterAction'\nimport { _tryLogin } from '../rest/users.api'\nimport * as rule from '../components/Utils/RoleAccessConfig'\n\nimport _ from 'lodash'\n\nconst styles = {\n    root: {\n      flexGrow: 1,\n    },\n    grow: {\n      flexGrow: 1,\n    }\n}\n\nclass MainContainer extends React.Component {\n    constructor(props){\n        super(props)\n    }\n\n    state = {\n        showRegistration: false,\n        email: '',\n        password: ''\n    }\n\n    componentDidMount(){\n        this.validateAuth()\n    }\n\n    validateAuth = () => {\n        if(!_.isEmpty(localStorage.getItem(\"access_token\"))){\n            if(rule.roleQualified(rule.VIEW_DASHBOARD))\n                this.goTo('/dashboard')\n            else\n                this.goTo('/clinics')\n        }\n    }\n\n    showRegistration = val => {\n        this.setState({ showRegistration: val })\n    }\n\n    goTo = (path) => {\n        RouteTo(this.props, path)\n    }\n\n    tryLogin = () => {\n        _tryLogin({\n            email: this.state.email,\n            password: this.state.password\n        }, data => {\n            if(data.status == 200 && !_.isEmpty(data.access_token)){\n                if(rule.roleQualified(rule.VIEW_DASHBOARD))\n                    this.goTo('/dashboard')\n                else\n                    this.goTo('/clinics')\n            }\n        })\n    }\n\n    handleChange = (field, e) => {\n        this.setState({\n            [field]: e.target.value\n        })\n    }\n\n    render(){\n        const { classes } = this.props\n        return (\n            <CMainLayout className={classes.root}>\n\n                <Grid container style={{ marginTop: 50 }} spacing={8} justify=\"center\" alignContent=\"center\">\n                    <Grid item>\n                        <form noValidate autoComplete=\"off\">\n                            <TextField\n                                id=\"username\"\n                                label=\"Username/Email\"\n                                placeholder=\"Enter Username/Email\"\n                                fullWidth\n                                margin=\"dense\"\n                                required\n                                onChange={val => this.handleChange('email', val)}\n                                variant=\"outlined\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n      \n                            <TextField\n                                id=\"password\"\n                                label=\"Password\"\n                                placeholder=\"Enter Password\"\n                                fullWidth\n                                onChange={val => this.handleChange('password', val)}\n                                type=\"password\"\n                                margin=\"dense\"\n                                required\n                                variant=\"outlined\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                onKeyPress={ev => {\n\n                                    if (ev.key === 'Enter') {\n                                        this.tryLogin()\n                                        ev.preventDefault();\n                                    }\n                                }}\n                            />\n\n                            <Button variant=\"contained\" fullWidth color=\"primary\" onClick={() => this.tryLogin()} style={{ marginTop: 10 }}>\n                                Login\n                            </Button>\n\n                            <Button fullWidth color=\"primary\" onClick={() => this.goTo('/dashboard')} style={{ marginTop: 10 }}>\n                                Forgot password\n                            </Button>\n                        </form>\n                    </Grid>\n                </Grid>\n        \n            </CMainLayout>\n        )\n    }\n}\n\nMainContainer.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(MainContainer)","import React from 'react';\nimport MenuIcon from '@material-ui/icons/Menu'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'\nimport {\n  Modal, AppBar, Toolbar, Typography, Button, IconButton, Grid, Paper, TextField\n} from '@material-ui/core'\n\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport { CDrawerLayout, ManageClinics, ManageUsers, Settings, Dashboard } from 'components'\n\nimport { tryLogout } from '../rest/users.api'\nimport { ActOnBranch } from '../components/Utils/RouterAction';\n\nconst styles = {\n    root: {\n      flexGrow: 1\n    },\n    grow: {\n      flexGrow: 1\n    }\n}\n\nclass HomePage extends React.Component {\n    constructor(props){\n        super(props)\n    }\n\n    state = {\n        showClinicForm: false\n    }\n\n    showClinicForm = val => {\n        this.setState({ showClinicForm: val })\n    }\n\n    render(){\n        const { classes } = this.props\n        \n        // let drawers = [\n        //     { name: 'Dashboard', route: '/dashboard', icon: <InboxIcon /> },\n        //     { name: 'Manage Clinics', route: '/dashboard/manage_clinics', icon: <InboxIcon /> },\n        //     { name: 'Manage Users', route: '/dashboard/manage_users', icon: <MailIcon /> },\n        //     { name: 'Settings', route: '/dashboard/settings', icon: <InboxIcon /> }\n        // ]\n\n        let drawers = [\n            { name: 'Dashboard', route: '/dashboard', icon: <InboxIcon /> },\n            { name: 'Manage Clinics', route: '/dashboard/manage_clinics', icon: <InboxIcon /> },\n            { name: 'Manage Users', route: '/dashboard/manage_users', icon: <MailIcon /> },\n        ]\n\n        return (\n            <CDrawerLayout drawers={drawers} {...this.props}>\n                <Route exact path=\"/dashboard\" render={() => <Dashboard />} />\n                <Route exact path=\"/dashboard/manage_clinics\" render={() => <ManageClinics {...this.props} />} />\n                <Route exact path=\"/dashboard/manage_users\" render={() => <ManageUsers {...this.props} />} />\n                <Route exact path=\"/dashboard/settings\" render={() => <Settings />} />\n            </CDrawerLayout>\n        )\n    }\n}\n\nHomePage.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(HomePage)","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'\nimport {\n  Modal, AppBar, Toolbar, Typography, Button, IconButton, Grid, Paper, TextField\n} from '@material-ui/core'\n\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\n\nimport { CDrawerLayout, ManageClinics } from 'components'\nimport _ from 'lodash'\n\nconst styles = {\n   root: {\n     flexGrow: 1,\n   },\n   grow: {\n     flexGrow: 1,\n   }\n}\n\nclass ClinicListPage extends React.Component {\n   state = {\n      data: {},\n      clinicID: 0\n   }\n\n   componentDidMount(){\n      this.setState({ clinicID: this.props.match.params.clinicID })\n      this.fetchData()\n   }\n\n   fetchData = () => {\n      let data = {\n         clinic: {\n            id: 1,\n            clinic_name: 'Ace Dermatology'\n         },\n         patients: [\n            { id: 1, patient: 'Ace Jordan Lumaad', gender: 'M', dob: '03/13/1990' },\n            { id: 2, patient: 'Gwen Lumaad', gender: 'F', dob: '03/13/1990' },\n            { id: 3, patient: 'Micah Lumaad', gender: 'M', dob: '03/13/1990' },\n            { id: 4, patient: 'Caye Britani Lumaad', gender: 'F', dob: '03/13/1990' },\n         ],\n         appointments: [\n            { id: 1, patient: 'Ace Jordan Lumaad', gender: 'M', dob: '03/13/1990' },\n            { id: 2, patient: 'Gwen Lumaad', gender: 'F', dob: '03/13/1990' },\n            { id: 3, patient: 'Micah Lumaad', gender: 'M', dob: '03/13/1990' },\n            { id: 4, patient: 'Caye Britani Lumaad', gender: 'F', dob: '03/13/1990' },\n         ]\n      }\n\n      this.setState({ data })\n   }\n\n   render() {\n      const { classes, theme } = this.props;\n\n      return (\n         <CDrawerLayout unPad firstPage {...this.props}>\n            <Route exact path={`/clinics`} render={() => <ManageClinics {...this.props} />} />\n         </CDrawerLayout>\n      )\n   }\n}\n\n\nexport default withStyles(styles, { withTheme: true })(ClinicListPage)","import React from 'react';\nimport MenuIcon from '@material-ui/icons/Menu'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'\nimport {\n  Modal, AppBar, Toolbar, Typography, Button, IconButton, Grid, Paper, TextField\n} from '@material-ui/core'\n\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\n\nimport { CDrawerLayout, PatientDashboard } from 'components'\n\nconst styles = {\n    root: {\n      flexGrow: 1\n    },\n    grow: {\n      flexGrow: 1\n    }\n}\n\nclass PatientContainer extends React.Component {\n    constructor(props){\n        super(props)\n    }\n\n    state = {\n        patientID: 0\n    }\n\n    componentDidMount(){\n        this.setState({ patientID: this.props.match.params.patientID })\n        this.fetchData()\n    }\n\n    fetchData = () => {\n\n    }\n\n    render(){\n        const { classes } = this.props\n        \n        let drawers = [\n            { name: 'Information', route: `/patient/${this.state.patientID}`, icon: <InboxIcon /> },\n            { name: 'History', route: `/patient/${this.state.patientID}/history`, icon: <InboxIcon /> },\n        ]\n\n        return (\n            <CDrawerLayout unPad backType {...this.props}>\n                <Route exact path={`/patient/${this.state.patientID}`} render={() => <PatientDashboard {...this.props} />} />\n            </CDrawerLayout>\n        )\n    }\n}\n\nPatientContainer.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(PatientContainer)","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'\nimport {\n  Modal, AppBar, Toolbar, Typography, Button, IconButton, Grid, Paper, TextField\n} from '@material-ui/core'\n\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\n\nimport { CDrawerLayout, Patients, Appointments, ClinicDashboard  } from 'components'\nimport _ from 'lodash'\n\nconst styles = {\n   root: {\n     flexGrow: 1,\n   },\n   grow: {\n     flexGrow: 1,\n   }\n}\n\nclass ClinicContainer extends React.Component {\n   state = {\n      data: {},\n      clinicID: 0\n   }\n\n   componentDidMount(){\n      this.setState({ clinicID: this.props.match.params.clinicID })\n      this.fetchData()\n   }\n\n   fetchData = () => {\n      let data = {\n         clinic: {\n            id: 1,\n            clinic_name: 'Ace Dermatology'\n         },\n         patients: [\n            { id: 1, patient: 'Ace Jordan Lumaad', gender: 'M', dob: '03/13/1990' },\n            { id: 2, patient: 'Gwen Lumaad', gender: 'F', dob: '03/13/1990' },\n            { id: 3, patient: 'Micah Lumaad', gender: 'M', dob: '03/13/1990' },\n            { id: 4, patient: 'Caye Britani Lumaad', gender: 'F', dob: '03/13/1990' },\n         ],\n         appointments: [\n            { id: 1, patient: 'Ace Jordan Lumaad', gender: 'M', dob: '03/13/1990' },\n            { id: 2, patient: 'Gwen Lumaad', gender: 'F', dob: '03/13/1990' },\n            { id: 3, patient: 'Micah Lumaad', gender: 'M', dob: '03/13/1990' },\n            { id: 4, patient: 'Caye Britani Lumaad', gender: 'F', dob: '03/13/1990' },\n         ]\n      }\n\n      this.setState({ data })\n   }\n\n   render() {\n      const { classes, theme } = this.props;\n\n      return (\n         <CDrawerLayout unPad backType {...this.props}>\n            <Route exact path={`/clinic/${this.state.clinicID}`} render={() => <ClinicDashboard {...this.props} />} />\n         </CDrawerLayout>\n      )\n   }\n}\n\n\nexport default withStyles(styles, { withTheme: true })(ClinicContainer)","import React from 'react'\nimport { MainContainer, AccessDenied, HomePage } from 'containers'\nimport { RouteTo, CheckAuthentication } from 'components/Utils/RouterAction'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nimport { DecideWhere } from '../components/Utils/RouterAction'\nimport PatientContainer from '../containers/PatientContainer';\nimport ClinicContainer from '../containers/ClinicContainer';\nimport { ClinicListPage } from '../containers';\n\nfunction Routes() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={MainContainer} />\n        <Route path=\"/dashboard\" render={props => CheckAuthentication(<HomePage {...props} />, ['OWNER','ADMIN','MAIN_OWNER'])} />\n        <Route path=\"/clinics\" render={props => CheckAuthentication(<ClinicListPage {...props} />, ['OWNER','ADMIN','MAIN_OWNER','STAFF', 'DOCTOR'])} />\n        <Route path=\"/clinic/:clinicID\" render={props => <ClinicContainer {...props} />} />\n        <Route path=\"/patient/:patientID\" render={props => <PatientContainer {...props} />} />\n        <Route component={AccessDenied} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default Routes\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\n/* eslint-disable no-console */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registrationParam => {\n      const registration = registrationParam\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n      }\n    })\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport configureStore from 'store'\nimport Routes from 'routes'\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport registerServiceWorker from 'utils/registerServiceWorker'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#2196f3'\n    }\n  }\n})\n\nrender(\n  <MuiThemeProvider theme={theme}>\n    <Provider store={configureStore()}>\n      <Routes />\n    </Provider>\n  </MuiThemeProvider>,\n  document.getElementById('root')\n)\n\nregisterServiceWorker()\n","import { combineReducers } from 'redux'\n\nconst rootReducer = combineReducers({})\n\nexport default rootReducer\n","import { createStore, applyMiddleware } from 'redux'\nimport ReduxThunk from 'redux-thunk'\nimport rootReducer from 'reducers'\n\nconst middlewares = [ReduxThunk]\nconst enhancer = [applyMiddleware(...middlewares)]\n\nexport default function configureStore(initialState = {}) {\n  return createStore(rootReducer, initialState, ...enhancer)\n}\n"],"sourceRoot":""}